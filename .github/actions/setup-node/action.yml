name: 'Setup Node.js with Cache'
description: 'Setup Node.js with optimized dependency caching'
inputs:
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '20'
  cache-key-suffix:
    description: 'Additional cache key suffix'
    required: false
    default: ''
  install-dependencies:
    description: 'Whether to install dependencies'
    required: false
    default: 'true'
  working-directory:
    description: 'Working directory for pnpm operations'
    required: false
    default: '.'
outputs:
  node-version:
    description: 'Node.js version that was installed'
    value: ${{ steps.setup.outputs.node-version }}
  cache-hit:
    description: 'Whether cache was hit'
    value: ${{ steps.cache.outputs.cache-hit }}
runs:
  using: 'composite'
  steps:
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: latest
        
    - name: Setup Node.js
      id: setup
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'pnpm'
        cache-dependency-path: ${{ inputs.working-directory }}/pnpm-lock.yaml
        
    - name: Cache node_modules
      id: cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ inputs.working-directory }}/node_modules
          ~/.pnpm-store
        key: pnpm-${{ runner.os }}-${{ hashFiles(format('{0}/pnpm-lock.yaml', inputs.working-directory)) }}-${{ inputs.cache-key-suffix }}
        restore-keys: |
          pnpm-${{ runner.os }}-${{ hashFiles(format('{0}/pnpm-lock.yaml', inputs.working-directory)) }}-
          pnpm-${{ runner.os }}-
          
    - name: Install dependencies
      if: inputs.install-dependencies == 'true' && steps.cache.outputs.cache-hit != 'true'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "ðŸ“¦ Installing dependencies..."
        pnpm install --frozen-lockfile --prefer-offline
        
    - name: Verify installation
      if: inputs.install-dependencies == 'true'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "âœ… Node.js $(node --version)"
        echo "âœ… pnpm $(pnpm --version)"
        echo "âœ… Dependencies: $(ls node_modules | wc -l) packages"