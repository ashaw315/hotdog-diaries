name: Scan Reddit for Content

on:
  schedule:
    - cron: '0 2,10,18 * * *'  # 3 times daily (2 AM, 10 AM, 6 PM UTC)
  workflow_dispatch:

concurrency:
  group: scan-reddit-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preflight:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      issues: write
    outputs:
      should_skip: ${{ steps.preflight.outputs.should_skip }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Preflight Secret Check
        id: preflight
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
          SITE_URL: ${{ secrets.SITE_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx tsx scripts/ci/lib/preflight.ts "Reddit Scanner" "REDDIT_CLIENT_ID,REDDIT_CLIENT_SECRET,AUTH_TOKEN,SITE_URL"

  scan-reddit:
    needs: preflight
    if: needs.preflight.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Scan Reddit with Retry Logic
        run: |
          echo "ü§ñ Scanning Reddit for hotdog content..."
          
          # Retry configuration
          MAX_ATTEMPTS=3
          ATTEMPT=1
          BACKOFF_BASE=2
          
          while [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
            echo "üì° Attempt $ATTEMPT/$MAX_ATTEMPTS..."
            
            RESULT=$(curl -L -X POST "${{ secrets.SITE_URL }}/api/admin/reddit/scan" \
              -H "Authorization: Bearer ${{ secrets.AUTH_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d '{"maxPosts": 20}' \
              --silent --show-error --write-out "\nHTTP_CODE:%{http_code}" \
              --max-time 30)
            
            CURL_EXIT=$?
            HTTP_CODE=$(echo "$RESULT" | tail -n 1 | sed 's/.*HTTP_CODE://')
            RESPONSE_BODY=$(echo "$RESULT" | sed '$d')
            
            echo "HTTP Code: $HTTP_CODE, Curl Exit: $CURL_EXIT"
            
            if [ $CURL_EXIT -eq 0 ] && [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 300 ]; then
              FOUND=$(echo "$RESPONSE_BODY" | jq -r '.totalFound // 0' 2>/dev/null || echo "0")
              PROCESSED=$(echo "$RESPONSE_BODY" | jq -r '.processed // 0' 2>/dev/null || echo "0")
              echo "‚úÖ Reddit scan successful: Found $FOUND, processed $PROCESSED"
              exit 0
            elif [ "$HTTP_CODE" = "429" ] || [ "$HTTP_CODE" -ge 500 ]; then
              # Rate limit or server error - retry with backoff
              echo "‚ö†Ô∏è Retryable error (HTTP $HTTP_CODE). First error line:"
              echo "$RESPONSE_BODY" | head -n 1 | cut -c1-200
              
              if [ $ATTEMPT -lt $MAX_ATTEMPTS ]; then
                DELAY=$((BACKOFF_BASE ** (ATTEMPT - 1)))
                echo "üïê Waiting ${DELAY}s before retry..."
                sleep $DELAY
                ATTEMPT=$((ATTEMPT + 1))
              else
                echo "‚ùå Max retries exceeded. Reddit scan failed."
                exit 1
              fi
            else
              # Non-retryable error
              echo "‚ùå Reddit scan failed with non-retryable error (HTTP $HTTP_CODE)"
              echo "Error response: $(echo "$RESPONSE_BODY" | head -n 1 | cut -c1-200)"
              exit 1
            fi
          done
      
      - name: Handle Scan Failure
        if: failure()
        run: |
          echo "‚ö†Ô∏è Reddit scan failed after retries"
          echo "This could be due to:"
          echo "  - API rate limits (429 errors)"
          echo "  - Reddit service unavailability"
          echo "  - Network connectivity issues"
          echo "  - Invalid API credentials"
          echo "Will retry on next scheduled run at next cron interval"
          
  skip-scan:
    needs: preflight
    if: needs.preflight.outputs.should_skip == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 2
    permissions:
      contents: read
    steps:
      - name: Skip Scan (Missing Secrets)
        run: |
          echo "‚è∏Ô∏è Reddit scan skipped due to missing required secrets"
          echo "Required secrets: REDDIT_CLIENT_ID, REDDIT_CLIENT_SECRET, AUTH_TOKEN, SITE_URL"
          echo "üìã Please check the automatically created GitHub issue for setup instructions"
          echo "Once secrets are configured, this workflow will resume automatically"
          exit 78  # Neutral exit code