name: Smart Scan Pixabay (Threshold-Based)

on:
  schedule:
    - cron: '0 7,19 * * *'  # 2 times daily with smart threshold checking
  workflow_dispatch:
    inputs:
      force_override:
        description: 'Force scan even if content surplus exists'
        required: false
        default: 'false'
        type: boolean

jobs:
  smart-scan-pixabay:
    runs-on: ubuntu-latest
    steps:
      - name: Smart Threshold Check and Scan
        run: |
          echo "üì∏ Smart scanning Pixabay (threshold-based)..."
          
          FORCE_OVERRIDE="${{ github.event.inputs.force_override || 'false' }}"
          
          RESULT=$(curl -L -X POST "${{ secrets.SITE_URL }}/api/admin/smart-scan" \
            -H "Authorization: Bearer ${{ secrets.AUTH_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"platform\": \"pixabay\",
              \"forceOverride\": $FORCE_OVERRIDE,
              \"maxPosts\": 10
            }" \
            --silent --show-error --retry 2)
          
          if [ $? -eq 0 ]; then
            SKIPPED=$(echo "$RESULT" | jq -r '.skipped // false')
            SCANNED=$(echo "$RESULT" | jq -r '.scanned // false')
            REASON=$(echo "$RESULT" | jq -r '.reason // "unknown"')
            
            if [ "$SKIPPED" = "true" ]; then
              READY_TO_POST=$(echo "$RESULT" | jq -r '.currentStats.readyToPost // 0')
              APPROVED=$(echo "$RESULT" | jq -r '.currentStats.approved // 0')
              echo "‚è≠Ô∏è Pixabay scan SKIPPED: $REASON"
              echo "üìä Current content: $READY_TO_POST ready to post, $APPROVED approved"
              echo "üí° Content levels sufficient - preserving API quotas"
            elif [ "$SCANNED" = "true" ]; then
              FOUND=$(echo "$RESULT" | jq -r '.scanResult.data.imagesFound // 0')
              APPROVED_NEW=$(echo "$RESULT" | jq -r '.scanResult.data.imagesApproved // 0')
              echo "‚úÖ Pixabay scan COMPLETED: $REASON"
              echo "üìà Results: Found $FOUND, approved $APPROVED_NEW new images"
            else
              echo "‚ùì Unexpected response from smart scan"
              echo "$RESULT" | jq -r '.message // "No message"'
            fi
          else
            echo "‚ùå Smart scan check failed"
            exit 1
          fi
      
      - name: Handle Smart Scan Failure
        if: failure()
        run: |
          echo "‚ùå Smart Pixabay scan failed - will retry on next scheduled run"
          echo "üí° Threshold-based scanning helps preserve API quotas when content is sufficient"