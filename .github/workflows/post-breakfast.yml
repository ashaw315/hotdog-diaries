name: Post Breakfast Content

on:
  schedule:
    - cron: '0 7 * * *'  # 7 AM UTC
  workflow_dispatch:

jobs:
  post-breakfast:
    runs-on: ubuntu-latest
    steps:
      - name: Post Breakfast Content
        run: |
          echo "üåÖ Posting breakfast content..."
          
          # Store response in variable for error analysis
          RESPONSE=$(curl -s -w "HTTP_CODE:%{http_code}" -L -X POST "${{ secrets.SITE_URL }}/api/admin/posting/post-now" \
            -H "Authorization: Bearer ${{ secrets.AUTH_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"immediate": true}' \
            --retry 2 --retry-delay 10 2>&1 || true)
          
          # Extract HTTP code and response body
          HTTP_CODE=$(echo "$RESPONSE" | grep -o 'HTTP_CODE:[0-9]*' | cut -d':' -f2)
          RESPONSE_BODY=$(echo "$RESPONSE" | sed 's/HTTP_CODE:[0-9]*$//')
          
          echo "HTTP Status: $HTTP_CODE"
          echo "Response: $RESPONSE_BODY"
          
          # Check for specific error conditions
          if [[ "$HTTP_CODE" == "401" ]]; then
            echo "‚ùå CRITICAL: Authentication failed - AUTH_TOKEN is invalid or expired"
            echo "This indicates a security breach recovery issue - AUTH_TOKEN needs to be updated in GitHub secrets"
            exit 1
          elif [[ "$HTTP_CODE" != "200" ]]; then
            echo "‚ùå FAILED: API returned HTTP $HTTP_CODE"
            echo "Response body: $RESPONSE_BODY"
            exit 1
          else
            echo "‚úÖ SUCCESS: Breakfast content posted (HTTP $HTTP_CODE)"
          fi
      
      - name: Verify Post Success
        if: success()
        run: |
          echo "‚úÖ Breakfast content posted successfully"
          # Optional: Send success notification
      
      - name: Handle Failure
        if: failure()
        run: |
          echo "‚ùå CRITICAL: Breakfast posting failed - this may indicate:"
          echo "  1. AUTH_TOKEN is invalid/expired (most common after security breach)"
          echo "  2. API endpoint is down"
          echo "  3. No approved content available"
          echo "  4. Database connectivity issues"
          echo ""
          echo "üîß TROUBLESHOOTING STEPS:"
          echo "  1. Check AUTH_TOKEN in GitHub secrets matches current production token"
          echo "  2. Verify Vercel deployment is live"
          echo "  3. Check content queue has approved posts available"
          echo "  4. Review API logs in Vercel dashboard"
          echo ""
          echo "üìû IMMEDIATE ACTIONS REQUIRED:"
          echo "  - Update AUTH_TOKEN in GitHub secrets if authentication failed"
          echo "  - Run content approval if queue is empty"
          echo "  - Check Vercel deployment status"