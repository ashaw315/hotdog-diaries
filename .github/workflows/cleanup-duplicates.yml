name: Database Cleanup

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    # Allow manual trigger
    inputs:
      dry_run:
        description: 'Dry run (no actual deletion)'
        required: false
        type: boolean
        default: false

permissions:
  contents: read

jobs:
  cleanup-duplicates:
    runs-on: ubuntu-latest
    name: Remove Duplicate Content
    
    steps:
      - name: Cleanup Duplicates
        run: |
          echo "üßπ Starting duplicate cleanup..."
          
          # Call the cleanup API endpoint
          response=$(curl -L -X POST "${{ secrets.SITE_URL }}/api/admin/cleanup-duplicates" \
            -H "Authorization: Bearer ${{ secrets.AUTH_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"dry_run": ${{ github.event.inputs.dry_run || false }}}' \
            --fail-with-body \
            -w "\n%{http_code}")
          
          # Extract HTTP status code
          http_code=$(echo "$response" | tail -n 1)
          body=$(echo "$response" | head -n -1)
          
          echo "Response: $body"
          
          if [ "$http_code" -ne 200 ]; then
            echo "‚ùå Cleanup failed with status $http_code"
            exit 1
          fi
          
          echo "‚úÖ Cleanup completed successfully"
      
      - name: Check Duplicate Status
        if: success()
        run: |
          echo "üìä Checking for remaining duplicates..."
          
          # Call the monitor endpoint
          response=$(curl -L -X GET "${{ secrets.SITE_URL }}/api/admin/monitor/duplicates" \
            -H "Authorization: Bearer ${{ secrets.AUTH_TOKEN }}" \
            --fail-with-body)
          
          echo "Duplicate status: $response"
          
          # Parse response and check if duplicates exist
          if echo "$response" | grep -q '"duplicates_found":0'; then
            echo "‚úÖ No duplicates found"
          else
            echo "‚ö†Ô∏è  Some duplicates may still exist"
          fi
      
      - name: Log Failure Details
        if: failure()
        run: |
          echo "üö® Duplicate cleanup job failed at $(date)"
          echo "Check the workflow logs for details"
          echo "Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  sync-posted-flags:
    runs-on: ubuntu-latest
    name: Sync Posted Flags
    needs: cleanup-duplicates
    
    steps:
      - name: Sync is_posted Flags
        run: |
          echo "üîÑ Syncing is_posted flags..."
          
          response=$(curl -L -X POST "${{ secrets.SITE_URL }}/api/admin/sync/posted-flags" \
            -H "Authorization: Bearer ${{ secrets.AUTH_TOKEN }}" \
            --fail-with-body)
          
          echo "Sync response: $response"
          echo "‚úÖ Sync completed"