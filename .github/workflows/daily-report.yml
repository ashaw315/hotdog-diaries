name: Daily Summary Report

on:
  schedule:
    - cron: '0 0 * * *'  # Midnight UTC daily
  workflow_dispatch:

jobs:
  generate-report:
    runs-on: ubuntu-latest
    steps:
      - name: Generate Daily Report
        run: |
          echo "üìä Generating daily summary report..."
          
          # Get comprehensive stats from schedule endpoint
          STATS=$(curl -s "${{ secrets.SITE_URL }}/api/admin/schedule" \
            -H "Authorization: Bearer ${{ secrets.AUTH_TOKEN }}" \
            -H "Accept: application/json")
          
          if [ $? -ne 0 ]; then
            echo "‚ùå Failed to fetch daily stats"
            exit 1
          fi
          
          # Extract key metrics
          POSTS_TODAY=$(echo "$STATS" | jq -r '.stats.todaysPosts // 0')
          QUEUE_SIZE=$(echo "$STATS" | jq -r '.queueStatus.totalPosted // 0')
          APPROVED=$(echo "$STATS" | jq -r '.queueStatus.totalApproved // 0')
          DAYS_LEFT=$(echo "scale=1; $APPROVED / 6" | bc -l)
          
          # Get posting schedule status
          SCHEDULE=$(curl -s "${{ secrets.SITE_URL }}/api/admin/schedule" \
            -H "Authorization: Bearer ${{ secrets.AUTH_TOKEN }}")
          
          MISSED_POSTS=$(echo "$SCHEDULE" | jq -r '[.schedule.todaysSchedule[] | select(.posted == false and (.time | strptime("%H:%M") | mktime) < now)] | length')
          
          echo "üìà Daily Report Generated:"
          echo "  Posts Today: $POSTS_TODAY"
          echo "  Missed Posts: $MISSED_POSTS"
          echo "  Queue Size: $QUEUE_SIZE"
          echo "  Approved: $APPROVED"
          echo "  Days of Content: $DAYS_LEFT"
          
          # Save report to file
          cat << EOF > daily-report.md
          # Hotdog Diaries Daily Report
          **Date:** $(date -u +"%Y-%m-%d")
          
          ## üìä Performance Metrics
          - **Posts Today:** $POSTS_TODAY / 6 expected
          - **Missed Posts:** $MISSED_POSTS
          - **Success Rate:** $(echo "scale=1; $POSTS_TODAY * 100 / 6" | bc -l)%
          
          ## üì¶ Content Queue Status
          - **Total Items:** $QUEUE_SIZE
          - **Approved & Ready:** $APPROVED
          - **Days of Content:** $DAYS_LEFT days
          - **Health Status:** $([ $(echo "$DAYS_LEFT > 3" | bc -l) -eq 1 ] && echo "‚úÖ Healthy" || echo "‚ö†Ô∏è Low")
          
          ## üîß Recommended Actions
          $(if [ $MISSED_POSTS -gt 0 ]; then echo "- üö® **URGENT:** Run catch-up posting for $MISSED_POSTS missed meals"; fi)
          $(if [ $(echo "$DAYS_LEFT < 3" | bc -l) -eq 1 ]; then echo "- üì° **HIGH PRIORITY:** Emergency content scanning needed"; fi)
          $(if [ $(echo "$DAYS_LEFT < 7" | bc -l) -eq 1 ]; then echo "- üîç **NORMAL:** Schedule regular content scanning"; fi)
          
          ---
          *Generated by GitHub Actions at $(date -u)*
          EOF
          
          cat daily-report.md

      - name: Check for Critical Issues
        run: |
          echo "üö® Checking for critical issues..."
          
          STATS=$(curl -s "${{ secrets.SITE_URL }}/api/admin/schedule" \
            -H "Authorization: Bearer ${{ secrets.AUTH_TOKEN }}")
          
          APPROVED=$(echo "$STATS" | jq -r '.queueStatus.totalApproved // 0')
          DAYS_LEFT=$(echo "scale=1; $APPROVED / 6" | bc -l)
          
          # Check if we need immediate action
          if [ $(echo "$DAYS_LEFT < 1" | bc -l) -eq 1 ]; then
            echo "üö® CRITICAL ALERT: Less than 1 day of content remaining!"
            echo "Triggering emergency scan workflow..."
            
            # Could trigger emergency scan here
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/actions/workflows/queue-monitor.yml/dispatches" \
              -d '{"ref":"main"}'
            
          elif [ $(echo "$DAYS_LEFT < 3" | bc -l) -eq 1 ]; then
            echo "‚ö†Ô∏è WARNING: Less than 3 days of content remaining"
            
          else
            echo "‚úÖ Queue status is acceptable ($DAYS_LEFT days)"
          fi

      - name: Archive Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: daily-report-${{ github.run_number }}
          path: daily-report.md
          retention-days: 30