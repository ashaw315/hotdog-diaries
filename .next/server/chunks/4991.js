"use strict";exports.id=4991,exports.ids=[4991],exports.modules={24991:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{L:()=>o});var e=c(68051),f=c(76865),g=c(29159),h=c(40704),i=c(61254),j=c(55229),k=c(7462),l=c(35144),m=a([e,f,g,h,i,j,k]);[e,f,g,h,i,j,k]=m.then?(await m)():m;class n{constructor(){this.isScanning=!1,this.redditService=new e.s,this.filteringService=new f.G,this.contentProcessor=new g.Q,this.duplicateDetection=new h.Y}async startAutomatedScanning(){try{let a=await this.getScanConfig();if(!a.isEnabled)return void await (0,k.rP)(l.$b.INFO,"REDDIT_SCAN_DISABLED","Reddit scanning is disabled in configuration");this.scanTimer&&clearInterval(this.scanTimer);let b=60*a.scanInterval*1e3;this.scanTimer=setInterval(async()=>{this.isScanning||await this.performScan()},b),await this.performScan(),await (0,k.rP)(l.$b.INFO,"REDDIT_SCAN_STARTED",`Reddit scanning started with ${a.scanInterval} minute intervals`,{config:a})}catch(a){throw await (0,k.rP)(l.$b.ERROR,"REDDIT_SCAN_START_ERROR",`Failed to start Reddit scanning: ${a.message}`,{error:a.message}),a}}async stopAutomatedScanning(){this.scanTimer&&(clearInterval(this.scanTimer),this.scanTimer=void 0),await (0,k.rP)(l.$b.INFO,"REDDIT_SCAN_STOPPED","Reddit scanning stopped")}async performScan(){if(this.isScanning)throw Error("Scan already in progress");this.isScanning=!0;let a=`reddit_scan_${Date.now()}`,b=new Date,c={scanId:a,startTime:b,endTime:new Date,postsFound:0,postsProcessed:0,postsApproved:0,postsRejected:0,postsFlagged:0,duplicatesFound:0,errors:[],rateLimitHit:!1,subredditsScanned:[]};try{let b=await this.getScanConfig();if(!b.isEnabled)throw Error("Reddit scanning is disabled");let d=[];for(let e of(c.subredditsScanned=b.targetSubreddits,b.searchTerms))try{let c={query:e,subreddits:b.targetSubreddits,sort:b.sortBy,time:b.timeRange,limit:Math.floor(b.maxPostsPerScan/b.searchTerms.length),minScore:b.minScore},f=await this.redditService.searchSubreddits(c);d=d.concat(f),await (0,k.rP)(l.$b.INFO,"REDDIT_SEARCH_TERM_SUCCESS",`Found ${f.length} posts for search term: ${e}`,{scanId:a,searchTerm:e,postsFound:f.length})}catch(b){c.errors.push(`Search term "${e}" failed: ${b.message}`),b.message.includes("rate limit")&&(c.rateLimitHit=!0),await (0,k.rP)(l.$b.ERROR,"REDDIT_SEARCH_TERM_ERROR",`Search term failed: ${e} - ${b.message}`,{scanId:a,searchTerm:e,error:b.message})}c.postsFound=d.length;let e=this.removeDuplicatePosts(d);if(c.duplicatesFound=d.length-e.length,e.length>0){let a=e.reduce((a,b)=>b.score>a.score?b:a);c.highestScoredPost={id:a.id,title:a.title,score:a.score,subreddit:a.subreddit}}for(let b of e)try{let d=await this.processRedditPost(b,a);switch(c.postsProcessed++,d.status){case"approved":c.postsApproved++;break;case"rejected":c.postsRejected++;break;case"flagged":c.postsFlagged++}}catch(d){c.errors.push(`Post ${b.id} processing failed: ${d.message}`),await (0,k.rP)(l.$b.ERROR,"REDDIT_POST_PROCESS_ERROR",`Failed to process Reddit post ${b.id}: ${d.message}`,{scanId:a,postId:b.id,error:d.message})}return await this.updateLastScanTime(),c.endTime=new Date,c.nextScanTime=new Date(Date.now()+60*b.scanInterval*1e3),await this.recordScanResult(c),await (0,k.rP)(l.$b.INFO,"REDDIT_SCAN_COMPLETED",`Reddit scan completed: ${c.postsProcessed} processed, ${c.postsApproved} approved`,c),await i.Q.recordScanCompletion(c.postsProcessed,!0,c.errors),c}catch(b){throw c.errors.push(b.message),c.endTime=new Date,await (0,k.rP)(l.$b.ERROR,"REDDIT_SCAN_ERROR",`Reddit scan failed: ${b.message}`,{scanId:a,error:b.message}),await i.Q.recordScanCompletion(c.postsProcessed,!1,c.errors),b}finally{this.isScanning=!1}}async processRedditPost(a,b){try{if(!await this.redditService.validateRedditContent(a))return{status:"rejected"};let c=`${a.title}
${a.selftext}`.trim(),d=await this.duplicateDetection.generateContentHash(c);if(await this.duplicateDetection.checkForDuplicates({content_text:c,content_image_url:a.imageUrls[0],content_video_url:a.videoUrls[0],content_hash:d}))return{status:"rejected"};let e=this.determineContentType(a),f={content_text:c,content_image_url:a.imageUrls[0]||null,content_video_url:a.videoUrls[0]||null,content_type:e,source_platform:"reddit",original_url:a.permalink,original_author:`u/${a.author} (via r/${a.subreddit})`,scraped_at:new Date,content_hash:d,reddit_data:JSON.stringify({post_id:a.id,title:a.title,subreddit:a.subreddit,author:a.author,score:a.score,upvote_ratio:a.upvoteRatio,num_comments:a.numComments,created_at:a.createdAt,flair:a.flair,is_gallery:a.isGallery,is_crosspost:a.isCrosspost,crosspost_origin:a.crosspostOrigin,media_urls:a.mediaUrls,scan_id:b})},g=await (0,j.Yr)("content_queue").values(f).returning(["id"]).first();if(!g)throw Error("Failed to insert content into queue");return{status:(await this.contentProcessor.processContent(g.id)).status}}catch(c){throw await (0,k.rP)(l.$b.ERROR,"REDDIT_POST_PROCESS_ERROR",`Failed to process Reddit post ${a.id}: ${c.message}`,{postId:a.id,scanId:b,error:c.message,post:{title:a.title,subreddit:a.subreddit,author:a.author,score:a.score}}),c}}determineContentType(a){let b=a.imageUrls.length>0,c=a.videoUrls.length>0;return a.title.trim().length>0||a.selftext.trim().length,c&&b?"mixed":c?"video":b?"image":"text"}removeDuplicatePosts(a){let b=new Set;return a.filter(a=>!b.has(a.id)&&(b.add(a.id),!0))}async getScanConfig(){try{let a=await (0,j.P)("reddit_scan_config").select("*").first();if(!a)return{isEnabled:!1,scanInterval:30,maxPostsPerScan:25,targetSubreddits:this.redditService.getHotdogSubreddits(),searchTerms:this.redditService.getHotdogSearchTerms(),minScore:10,sortBy:"hot",timeRange:"week",includeNSFW:!1};return{isEnabled:a.is_enabled,scanInterval:a.scan_interval,maxPostsPerScan:a.max_posts_per_scan,targetSubreddits:a.target_subreddits||this.redditService.getHotdogSubreddits(),searchTerms:a.search_terms||this.redditService.getHotdogSearchTerms(),minScore:a.min_score,sortBy:a.sort_by,timeRange:a.time_range,includeNSFW:a.include_nsfw,lastScanId:a.last_scan_id,lastScanTime:a.last_scan_time?new Date(a.last_scan_time):void 0}}catch(a){return{isEnabled:!1,scanInterval:30,maxPostsPerScan:25,targetSubreddits:this.redditService.getHotdogSubreddits(),searchTerms:this.redditService.getHotdogSearchTerms(),minScore:10,sortBy:"hot",timeRange:"week",includeNSFW:!1}}}async updateScanConfig(a){try{let b={...await this.getScanConfig(),...a};await (0,j.P)("reddit_scan_config").upsert({is_enabled:b.isEnabled,scan_interval:b.scanInterval,max_posts_per_scan:b.maxPostsPerScan,target_subreddits:b.targetSubreddits,search_terms:b.searchTerms,min_score:b.minScore,sort_by:b.sortBy,time_range:b.timeRange,include_nsfw:b.includeNSFW,last_scan_id:b.lastScanId,last_scan_time:b.lastScanTime,updated_at:new Date}),await (0,k.rP)(l.$b.INFO,"REDDIT_CONFIG_UPDATED","Reddit scan configuration updated",{config:b})}catch(b){throw await (0,k.rP)(l.$b.ERROR,"REDDIT_CONFIG_UPDATE_ERROR",`Failed to update Reddit configuration: ${b.message}`,{config:a,error:b.message}),b}}async updateLastScanTime(){await this.updateScanConfig({lastScanTime:new Date})}async recordScanResult(a){try{await (0,j.Yr)("reddit_scan_results").values({scan_id:a.scanId,start_time:a.startTime,end_time:a.endTime,posts_found:a.postsFound,posts_processed:a.postsProcessed,posts_approved:a.postsApproved,posts_rejected:a.postsRejected,posts_flagged:a.postsFlagged,duplicates_found:a.duplicatesFound,subreddits_scanned:a.subredditsScanned,highest_score:a.highestScoredPost?.score||0,errors:a.errors,rate_limit_hit:a.rateLimitHit,created_at:new Date})}catch(b){await (0,k.rP)(l.$b.WARNING,"REDDIT_SCAN_RESULT_RECORD_ERROR",`Failed to record Reddit scan result: ${b.message}`,{scanId:a.scanId,error:b.message})}}async getScanStats(){try{let a=await (0,j.P)("reddit_scan_results").select(["COUNT(*) as total_scans","SUM(posts_found) as total_posts_found","SUM(posts_processed) as total_posts_processed","SUM(posts_approved) as total_posts_approved","AVG(highest_score) as average_score","MAX(end_time) as last_scan_time"]).first(),b=await this.getScanConfig(),c=b.lastScanTime?new Date(b.lastScanTime.getTime()+60*b.scanInterval*1e3):void 0,d=parseInt(a?.total_scans||"0"),e=parseInt(a?.total_posts_processed||"0"),f=parseInt(a?.total_posts_approved||"0");return{totalScans:d,totalPostsFound:parseInt(a?.total_posts_found||"0"),totalPostsProcessed:e,totalPostsApproved:f,averageScore:parseFloat(a?.average_score||"0"),topSubreddits:[],topAuthors:[],scanFrequency:b.scanInterval,lastScanTime:a?.last_scan_time?new Date(a.last_scan_time):void 0,nextScanTime:c,successRate:e>0?f/e*100:0}}catch(a){return{totalScans:0,totalPostsFound:0,totalPostsProcessed:0,totalPostsApproved:0,averageScore:0,topSubreddits:[],topAuthors:[],scanFrequency:30,lastScanTime:void 0,nextScanTime:void 0,successRate:0}}}async testConnection(){try{let a=await this.redditService.getApiStatus();if(a.isConnected)return{success:!0,message:"Reddit API connection successful",details:a};return{success:!1,message:a.lastError||"Failed to connect to Reddit API",details:a}}catch(a){return{success:!1,message:`Connection test failed: ${a.message}`,details:{error:a.message}}}}}let o=new n;d()}catch(a){d(a)}})}};