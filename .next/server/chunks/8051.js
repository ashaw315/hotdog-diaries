"use strict";exports.id=8051,exports.ids=[8051],exports.modules={61254:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{Q:()=>j});var e=c(7462),f=c(35144),g=c(55229),h=a([e,g]);[e,g]=h.then?(await h)():h;class i{static{this.ERROR_RATE_THRESHOLD=10}static{this.LATENCY_THRESHOLD=5e3}static{this.RATE_LIMIT_WARNING_THRESHOLD=80}async getHealthMetrics(){try{let a=await (0,g.P)("system_logs").select(["log_level","message","created_at"]).where("component","like","REDDIT_%").where("created_at",">=",new Date(Date.now()-36e5)).orderBy("created_at","desc").limit(100),b=this.determineApiConnectionStatus(a),c=this.determineRateLimitStatus(a),d=await this.determineScanStatus(),e=this.calculateErrorRate(a),f=await this.calculateAverageResponseTime(),h=await this.getLastSuccessfulScan(),i=await this.calculateUptime(),j=this.countRecentAlerts();return{apiConnectionStatus:b,rateLimitStatus:c,scanStatus:d,errorRate:e,averageResponseTime:f,lastSuccessfulScan:h,uptime:i,alertsTriggered:j}}catch(a){return await (0,e.rP)(f.$b.ERROR,"REDDIT_HEALTH_CHECK_ERROR",`Failed to get Reddit health metrics: ${a.message}`,{error:a.message}),{apiConnectionStatus:"degraded",rateLimitStatus:"warning",scanStatus:"error",errorRate:100,averageResponseTime:0,uptime:0,alertsTriggered:1}}}async recordApiRequest(a,b,c){try{this.metrics.requestsPerMinute++,a?this.metrics.averageLatency=(this.metrics.averageLatency+b)/2:c&&(this.metrics.errorsByType[c]=(this.metrics.errorsByType[c]||0)+1),this.metrics.peakLatency=Math.max(this.metrics.peakLatency,b),await this.checkPerformanceThresholds(a,b,c),b>i.LATENCY_THRESHOLD&&await (0,e.rP)(f.$b.WARNING,"REDDIT_HIGH_LATENCY",`Reddit API request took ${b}ms`,{latency:b,success:a,errorType:c})}catch(a){console.error("Failed to record Reddit API request:",a)}}async recordRateLimitHit(a){try{this.metrics.rateLimitHits++,await this.triggerAlert({type:"rate_limit",severity:"medium",message:`Reddit API rate limit exceeded. Reset at ${a.toISOString()}`,metadata:{resetTime:a.toISOString()}})}catch(a){console.error("Failed to record rate limit hit:",a)}}async recordScanCompletion(a,b,c){try{b&&(this.metrics.postsProcessedPerHour+=a),(!b||c.length>0)&&await this.triggerAlert({type:"scan_failure",severity:c.length>5?"high":"medium",message:`Reddit scan completed with ${c.length} errors`,metadata:{postsProcessed:a,errors:c.slice(0,5)}})}catch(a){console.error("Failed to record scan completion:",a)}}getPerformanceMetrics(){return{...this.metrics}}getActiveAlerts(){return this.alerts.filter(a=>!a.resolved)}async resolveAlert(a){let b=this.alerts.find(b=>b.id===a);b&&(b.resolved=!0,b.resolvedAt=new Date,await (0,e.rP)(f.$b.INFO,"REDDIT_ALERT_RESOLVED",`Reddit alert resolved: ${b.message}`,{alertId:a,alertType:b.type}))}resetMetrics(){this.metrics={requestsPerMinute:0,successRate:0,averageLatency:0,peakLatency:0,errorsByType:{},rateLimitHits:0,postsProcessedPerHour:0};let a=new Date(Date.now()-864e5);this.alerts=this.alerts.filter(b=>!b.resolved||b.resolvedAt&&b.resolvedAt>a)}determineApiConnectionStatus(a){let b=a.filter(a=>"error"===a.log_level&&a.message.toLowerCase().includes("connection")),c=a.filter(a=>a.message.toLowerCase().includes("reddit")&&(a.message.includes("success")||a.message.includes("completed")));return b.length>10?"down":b.length>3||0===c.length?"degraded":"healthy"}determineRateLimitStatus(a){let b=a.filter(a=>a.message.toLowerCase().includes("rate limit"));return b.length>5?"critical":b.length>1?"warning":"healthy"}async determineScanStatus(){try{let a=await (0,g.P)("reddit_scan_config").select(["is_enabled","last_scan_time"]).first();if(!a||!a.is_enabled)return"paused";if(a.last_scan_time){let b=new Date(a.last_scan_time),c=new Date(Date.now()-72e5);if(b<c)return"error"}return"active"}catch(a){return"error"}}calculateErrorRate(a){let b=a.length;if(0===b)return 0;let c=a.filter(a=>"error"===a.log_level);return Math.round(c.length/b*100)}async calculateAverageResponseTime(){return this.metrics.averageLatency}async getLastSuccessfulScan(){try{let a=await (0,g.P)("reddit_scan_results").select(["end_time"]).where("posts_approved",">",0).orderBy("end_time","desc").first();return a?new Date(a.end_time):void 0}catch(a){return}}async calculateUptime(){try{let a=new Date(Date.now()-864e5),b=await (0,g.P)("system_logs").count("*").where("log_level","error").where("component","like","REDDIT_%").where("created_at",">=",a).first(),c=parseInt(b?.count||"0"),d=Math.max(0,(96-c)/96*100);return Math.round(d)}catch(a){return 0}}countRecentAlerts(){let a=new Date(Date.now()-36e5);return this.alerts.filter(b=>b.timestamp>a).length}async checkPerformanceThresholds(a,b,c){let d=this.calculateCurrentErrorRate();d>i.ERROR_RATE_THRESHOLD&&await this.triggerAlert({type:"high_error_rate",severity:"high",message:`Reddit API error rate is ${d}%`,metadata:{errorRate:d}}),b>i.LATENCY_THRESHOLD&&await this.triggerAlert({type:"api_error",severity:"medium",message:`Reddit API latency is high: ${b}ms`,metadata:{latency:b}})}calculateCurrentErrorRate(){let a=this.metrics.requestsPerMinute,b=Object.values(this.metrics.errorsByType).reduce((a,b)=>a+b,0);return a>0?Math.round(b/a*100):0}async triggerAlert(a){if(this.alerts.find(b=>b.type===a.type&&!b.resolved&&Date.now()-b.timestamp.getTime()<36e5))return;let b={id:`reddit_alert_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,timestamp:new Date,resolved:!1,...a};this.alerts.push(b),await (0,e.rP)("critical"===a.severity?f.$b.FATAL:"high"===a.severity?f.$b.ERROR:"medium"===a.severity?f.$b.WARN:f.$b.INFO,"REDDIT_ALERT_TRIGGERED",b.message,{alertId:b.id,alertType:b.type,severity:b.severity,metadata:b.metadata})}constructor(){this.alerts=[],this.metrics={requestsPerMinute:0,successRate:0,averageLatency:0,peakLatency:0,errorsByType:{},rateLimitHits:0,postsProcessedPerHour:0}}}let j=new i;d()}catch(a){d(a)}})},68051:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{s:()=>k});var e=c(4097),f=c.n(e),g=c(7462),h=c(35144),i=c(61254),j=a([g,i]);[g,i]=j.then?(await j)():j;class k{constructor(){this.rateLimitTracker={used:0,remaining:100,resetTime:new Date(Date.now()+6e4)},this.requestQueue=[],this.isProcessingQueue=!1;let a=process.env.REDDIT_CLIENT_ID,b=process.env.REDDIT_CLIENT_SECRET,c=process.env.REDDIT_USER_AGENT||"HotdogDiaries/1.0.0 by /u/hotdog_scanner";if(!a||!b)throw Error("Reddit API credentials are required (REDDIT_CLIENT_ID and REDDIT_CLIENT_SECRET)");this.client=new(f())({userAgent:c,clientId:a,clientSecret:b,grantType:"client_credentials"}),this.client.config({requestDelay:1e3,requestTimeout:3e4,continueAfterRatelimitError:!0,retryErrorCodes:[502,503,504,522],maxRetryAttempts:3})}async searchSubreddits(a){let b=Date.now();try{await this.checkRateLimit();let c=[],d=Math.floor((a.limit||25)/a.subreddits.length);for(let b of a.subreddits)try{let e,f=this.client.getSubreddit(b);if(a.query)e=await f.search({query:a.query,sort:a.sort||"relevance",time:a.time||"month",limit:d});else switch(a.sort){case"hot":default:e=await f.getHot({limit:d});break;case"top":e=await f.getTop({time:a.time||"week",limit:d});break;case"new":e=await f.getNew({limit:d})}for(let b of(this.updateRateLimit(),e)){let d=this.processRedditPost(b);a.minScore&&d.score<a.minScore||c.push(d)}await (0,g.rP)(h.$b.INFO,"REDDIT_SUBREDDIT_SEARCH_SUCCESS",`Found ${e.length} posts in r/${b}`,{subreddit:b,query:a.query,postsFound:e.length})}catch(c){await (0,g.rP)(h.$b.ERROR,"REDDIT_SUBREDDIT_SEARCH_ERROR",`Failed to search r/${b}: ${c.message}`,{subreddit:b,query:a.query,error:c.message});continue}c.sort((a,b)=>b.score-a.score),await (0,g.rP)(h.$b.INFO,"REDDIT_SEARCH_COMPLETED",`Reddit search completed: ${c.length} posts found across ${a.subreddits.length} subreddits`,{subreddits:a.subreddits,query:a.query,totalPosts:c.length});let e=Date.now()-b;return await i.Q.recordApiRequest(!0,e),c}catch(e){let c=Date.now()-b,d=e.message.includes("rate limit")?"rate_limit":"api_error";if(await i.Q.recordApiRequest(!1,c,d),e.message.includes("rate limit"))throw await this.handleRateLimit(e),await i.Q.recordRateLimitHit(this.rateLimitTracker.resetTime),Error("Reddit API rate limit exceeded. Please try again later.");throw await (0,g.rP)(h.$b.ERROR,"REDDIT_SEARCH_ERROR",`Reddit search failed: ${e.message}`,{subreddits:a.subreddits,query:a.query,error:e.message}),Error(`Reddit search failed: ${e.message}`)}}processRedditPost(a){let b,c=[],d=[];if(a.url){let b=a.url.toString();b.match(/\.(jpg|jpeg|png|gif|webp)$/i)||b.includes("i.redd.it")?c.push(b):b.includes("v.redd.it")?d.push(b):a.is_gallery&&a.media_metadata&&Object.values(a.media_metadata).forEach(a=>{if(a.s&&a.s.u){let b=a.s.u.replace(/&amp;/g,"&");c.push(b)}})}if(a.crosspost_parent_list&&a.crosspost_parent_list.length>0){let c=a.crosspost_parent_list[0];b={subreddit:c.subreddit,author:c.author,title:c.title}}return{id:a.id,title:a.title||"",selftext:a.selftext||"",subreddit:a.subreddit.display_name||a.subreddit_name_prefixed?.replace("r/","")||"",author:a.author?.name||"[deleted]",createdAt:new Date(1e3*a.created_utc),score:a.score||0,upvoteRatio:a.upvote_ratio||0,numComments:a.num_comments||0,permalink:`https://reddit.com${a.permalink}`,url:a.url?.toString()||"",imageUrls:c,videoUrls:d,mediaUrls:[...c,...d],isNSFW:a.over_18||!1,isSpoiler:a.spoiler||!1,isStickied:a.stickied||!1,flair:a.link_flair_text||void 0,isGallery:a.is_gallery||!1,isCrosspost:a.crosspost_parent_list?.length>0,crosspostOrigin:b}}async validateRedditContent(a){try{if(a.isNSFW||a.score<1)return!1;let b=`${a.title} ${a.selftext}`.toLowerCase();if(!["hotdog","hot dog","hotdogs","hot dogs","weiner","wiener","frankfurter","sausage","bratwurst","kielbasa","chorizo"].some(a=>b.includes(a))||["click here","buy now","limited time","discount","promo code","get yours","order now","sale","affiliate","referral","commission"].some(a=>b.includes(a.toLowerCase())))return!1;let c=a.mediaUrls.length>0,d=a.selftext.length>50,e=a.score>10||a.numComments>5;return c||d||e}catch(b){return await (0,g.rP)(h.$b.ERROR,"REDDIT_VALIDATION_ERROR",`Reddit post validation failed: ${b.message}`,{postId:a.id,error:b.message}),!1}}getHotdogSubreddits(){return["hotdogs","food","FoodPorn","grilling","baseball","sausages","BBQ","Cooking","MealPrepSunday","budgetfood","americanfood","ballparks"]}getHotdogSearchTerms(){return["hotdog","hot dog","frankfurter","bratwurst","wiener","ballpark frank","chili dog","corn dog","sausage grill"]}async checkRateLimit(){let a=new Date;if(a>=this.rateLimitTracker.resetTime&&(this.rateLimitTracker.used=0,this.rateLimitTracker.remaining=100,this.rateLimitTracker.resetTime=new Date(a.getTime()+6e4)),this.rateLimitTracker.remaining<=0){let b=this.rateLimitTracker.resetTime.getTime()-a.getTime();throw Error(`Rate limit exceeded. Reset in ${Math.ceil(b/1e3)} seconds`)}}async handleRateLimit(a){let b=new Date(Date.now()+6e4);this.rateLimitTracker={used:100,remaining:0,resetTime:b},await (0,g.rP)(h.$b.WARNING,"REDDIT_RATE_LIMIT",`Reddit API rate limit exceeded. Reset at ${b.toISOString()}`,{resetTime:b.toISOString(),error:a.message})}updateRateLimit(){this.rateLimitTracker.used++,this.rateLimitTracker.remaining=Math.max(0,100-this.rateLimitTracker.used)}async getApiStatus(){try{let a=this.client.getSubreddit("hotdogs");return await a.getHot({limit:1}),this.updateRateLimit(),{isConnected:!0,rateLimits:this.rateLimitTracker,lastRequest:new Date,userAgent:this.client.userAgent}}catch(a){return{isConnected:!1,rateLimits:{used:0,remaining:0,resetTime:new Date},lastError:a.message,lastRequest:new Date,userAgent:this.client.userAgent}}}async queueRequest(a){return new Promise((b,c)=>{this.requestQueue.push(async()=>{try{let c=await a();b(c)}catch(a){c(a)}}),this.processQueue()})}async processQueue(){if(!this.isProcessingQueue&&0!==this.requestQueue.length){for(this.isProcessingQueue=!0;this.requestQueue.length>0;){let a=this.requestQueue.shift();if(a)try{await this.checkRateLimit(),await a(),await new Promise(a=>setTimeout(a,1e3))}catch(a){console.error("Queued Reddit request failed:",a)}}this.isProcessingQueue=!1}}}d()}catch(a){d(a)}})}};