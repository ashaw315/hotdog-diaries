"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/request-promise-core";
exports.ids = ["vendor-chunks/request-promise-core"];
exports.modules = {

/***/ "(rsc)/./node_modules/request-promise-core/configure/request2.js":
/*!*****************************************************************!*\
  !*** ./node_modules/request-promise-core/configure/request2.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar core = __webpack_require__(/*! ../ */ \"(rsc)/./node_modules/request-promise-core/lib/plumbing.js\"),\n    isArray = __webpack_require__(/*! lodash/isArray */ \"(rsc)/./node_modules/lodash/isArray.js\"),\n    isFunction = __webpack_require__(/*! lodash/isFunction */ \"(rsc)/./node_modules/lodash/isFunction.js\"),\n    isObjectLike = __webpack_require__(/*! lodash/isObjectLike */ \"(rsc)/./node_modules/lodash/isObjectLike.js\");\n\n\nmodule.exports = function (options) {\n\n    var errorText = 'Please verify options'; // For better minification because this string is repeating\n\n    if (!isObjectLike(options)) {\n        throw new TypeError(errorText);\n    }\n\n    if (!isFunction(options.request)) {\n        throw new TypeError(errorText + '.request');\n    }\n\n    if (!isArray(options.expose) || options.expose.length === 0) {\n        throw new TypeError(errorText + '.expose');\n    }\n\n\n    var plumbing = core({\n        PromiseImpl: options.PromiseImpl,\n        constructorMixin: options.constructorMixin\n    });\n\n\n    // Intercepting Request's init method\n\n    var originalInit = options.request.Request.prototype.init;\n\n    options.request.Request.prototype.init = function RP$initInterceptor(requestOptions) {\n\n        // Init may be called again - currently in case of redirects\n        if (isObjectLike(requestOptions) && !this._callback && !this._rp_promise) {\n\n            plumbing.init.call(this, requestOptions);\n\n        }\n\n        return originalInit.apply(this, arguments);\n\n    };\n\n\n    // Exposing the Promise capabilities\n\n    var thenExposed = false;\n    for ( var i = 0; i < options.expose.length; i+=1 ) {\n\n        var method = options.expose[i];\n\n        plumbing[ method === 'promise' ? 'exposePromise' : 'exposePromiseMethod' ](\n            options.request.Request.prototype,\n            null,\n            '_rp_promise',\n            method\n        );\n\n        if (method === 'then') {\n            thenExposed = true;\n        }\n\n    }\n\n    if (!thenExposed) {\n        throw new Error('Please expose \"then\"');\n    }\n\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVxdWVzdC1wcm9taXNlLWNvcmUvY29uZmlndXJlL3JlcXVlc3QyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFdBQVcsbUJBQU8sQ0FBQyxzRUFBSztBQUN4QixjQUFjLG1CQUFPLENBQUMsOERBQWdCO0FBQ3RDLGlCQUFpQixtQkFBTyxDQUFDLG9FQUFtQjtBQUM1QyxtQkFBbUIsbUJBQU8sQ0FBQyx3RUFBcUI7OztBQUdoRDs7QUFFQSw2Q0FBNkM7O0FBRTdDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOzs7QUFHTDs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOzs7QUFHQTs7QUFFQTtBQUNBLHFCQUFxQiwyQkFBMkI7O0FBRWhEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvYWRhbXNoYXcvRGV2ZWxvcG1lbnQvd2Vic2l0ZXMvaG90ZG9nLWRpYXJpZXMvbm9kZV9tb2R1bGVzL3JlcXVlc3QtcHJvbWlzZS1jb3JlL2NvbmZpZ3VyZS9yZXF1ZXN0Mi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBjb3JlID0gcmVxdWlyZSgnLi4vJyksXG4gICAgaXNBcnJheSA9IHJlcXVpcmUoJ2xvZGFzaC9pc0FycmF5JyksXG4gICAgaXNGdW5jdGlvbiA9IHJlcXVpcmUoJ2xvZGFzaC9pc0Z1bmN0aW9uJyksXG4gICAgaXNPYmplY3RMaWtlID0gcmVxdWlyZSgnbG9kYXNoL2lzT2JqZWN0TGlrZScpO1xuXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcblxuICAgIHZhciBlcnJvclRleHQgPSAnUGxlYXNlIHZlcmlmeSBvcHRpb25zJzsgLy8gRm9yIGJldHRlciBtaW5pZmljYXRpb24gYmVjYXVzZSB0aGlzIHN0cmluZyBpcyByZXBlYXRpbmdcblxuICAgIGlmICghaXNPYmplY3RMaWtlKG9wdGlvbnMpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoZXJyb3JUZXh0KTtcbiAgICB9XG5cbiAgICBpZiAoIWlzRnVuY3Rpb24ob3B0aW9ucy5yZXF1ZXN0KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGVycm9yVGV4dCArICcucmVxdWVzdCcpO1xuICAgIH1cblxuICAgIGlmICghaXNBcnJheShvcHRpb25zLmV4cG9zZSkgfHwgb3B0aW9ucy5leHBvc2UubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoZXJyb3JUZXh0ICsgJy5leHBvc2UnKTtcbiAgICB9XG5cblxuICAgIHZhciBwbHVtYmluZyA9IGNvcmUoe1xuICAgICAgICBQcm9taXNlSW1wbDogb3B0aW9ucy5Qcm9taXNlSW1wbCxcbiAgICAgICAgY29uc3RydWN0b3JNaXhpbjogb3B0aW9ucy5jb25zdHJ1Y3Rvck1peGluXG4gICAgfSk7XG5cblxuICAgIC8vIEludGVyY2VwdGluZyBSZXF1ZXN0J3MgaW5pdCBtZXRob2RcblxuICAgIHZhciBvcmlnaW5hbEluaXQgPSBvcHRpb25zLnJlcXVlc3QuUmVxdWVzdC5wcm90b3R5cGUuaW5pdDtcblxuICAgIG9wdGlvbnMucmVxdWVzdC5SZXF1ZXN0LnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gUlAkaW5pdEludGVyY2VwdG9yKHJlcXVlc3RPcHRpb25zKSB7XG5cbiAgICAgICAgLy8gSW5pdCBtYXkgYmUgY2FsbGVkIGFnYWluIC0gY3VycmVudGx5IGluIGNhc2Ugb2YgcmVkaXJlY3RzXG4gICAgICAgIGlmIChpc09iamVjdExpa2UocmVxdWVzdE9wdGlvbnMpICYmICF0aGlzLl9jYWxsYmFjayAmJiAhdGhpcy5fcnBfcHJvbWlzZSkge1xuXG4gICAgICAgICAgICBwbHVtYmluZy5pbml0LmNhbGwodGhpcywgcmVxdWVzdE9wdGlvbnMpO1xuXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gb3JpZ2luYWxJbml0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cbiAgICB9O1xuXG5cbiAgICAvLyBFeHBvc2luZyB0aGUgUHJvbWlzZSBjYXBhYmlsaXRpZXNcblxuICAgIHZhciB0aGVuRXhwb3NlZCA9IGZhbHNlO1xuICAgIGZvciAoIHZhciBpID0gMDsgaSA8IG9wdGlvbnMuZXhwb3NlLmxlbmd0aDsgaSs9MSApIHtcblxuICAgICAgICB2YXIgbWV0aG9kID0gb3B0aW9ucy5leHBvc2VbaV07XG5cbiAgICAgICAgcGx1bWJpbmdbIG1ldGhvZCA9PT0gJ3Byb21pc2UnID8gJ2V4cG9zZVByb21pc2UnIDogJ2V4cG9zZVByb21pc2VNZXRob2QnIF0oXG4gICAgICAgICAgICBvcHRpb25zLnJlcXVlc3QuUmVxdWVzdC5wcm90b3R5cGUsXG4gICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgJ19ycF9wcm9taXNlJyxcbiAgICAgICAgICAgIG1ldGhvZFxuICAgICAgICApO1xuXG4gICAgICAgIGlmIChtZXRob2QgPT09ICd0aGVuJykge1xuICAgICAgICAgICAgdGhlbkV4cG9zZWQgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICBpZiAoIXRoZW5FeHBvc2VkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUGxlYXNlIGV4cG9zZSBcInRoZW5cIicpO1xuICAgIH1cblxufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/request-promise-core/configure/request2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/request-promise-core/lib/errors.js":
/*!*********************************************************!*\
  !*** ./node_modules/request-promise-core/lib/errors.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("\n\n\nfunction RequestError(cause, options, response) {\n\n    this.name = 'RequestError';\n    this.message = String(cause);\n    this.cause = cause;\n    this.error = cause; // legacy attribute\n    this.options = options;\n    this.response = response;\n\n    if (Error.captureStackTrace) { // required for non-V8 environments\n        Error.captureStackTrace(this);\n    }\n\n}\nRequestError.prototype = Object.create(Error.prototype);\nRequestError.prototype.constructor = RequestError;\n\n\nfunction StatusCodeError(statusCode, body, options, response) {\n\n    this.name = 'StatusCodeError';\n    this.statusCode = statusCode;\n    this.message = statusCode + ' - ' + (JSON && JSON.stringify ? JSON.stringify(body) : body);\n    this.error = body; // legacy attribute\n    this.options = options;\n    this.response = response;\n\n    if (Error.captureStackTrace) { // required for non-V8 environments\n        Error.captureStackTrace(this);\n    }\n\n}\nStatusCodeError.prototype = Object.create(Error.prototype);\nStatusCodeError.prototype.constructor = StatusCodeError;\n\n\nfunction TransformError(cause, options, response) {\n\n    this.name = 'TransformError';\n    this.message = String(cause);\n    this.cause = cause;\n    this.error = cause; // legacy attribute\n    this.options = options;\n    this.response = response;\n\n    if (Error.captureStackTrace) { // required for non-V8 environments\n        Error.captureStackTrace(this);\n    }\n\n}\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\n\n\nmodule.exports = {\n    RequestError: RequestError,\n    StatusCodeError: StatusCodeError,\n    TransformError: TransformError\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVxdWVzdC1wcm9taXNlLWNvcmUvbGliL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7O0FBR2I7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7O0FBRUEsbUNBQW1DO0FBQ25DO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTs7QUFFQSxtQ0FBbUM7QUFDbkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBOztBQUVBLG1DQUFtQztBQUNuQztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2FkYW1zaGF3L0RldmVsb3BtZW50L3dlYnNpdGVzL2hvdGRvZy1kaWFyaWVzL25vZGVfbW9kdWxlcy9yZXF1ZXN0LXByb21pc2UtY29yZS9saWIvZXJyb3JzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuXG5mdW5jdGlvbiBSZXF1ZXN0RXJyb3IoY2F1c2UsIG9wdGlvbnMsIHJlc3BvbnNlKSB7XG5cbiAgICB0aGlzLm5hbWUgPSAnUmVxdWVzdEVycm9yJztcbiAgICB0aGlzLm1lc3NhZ2UgPSBTdHJpbmcoY2F1c2UpO1xuICAgIHRoaXMuY2F1c2UgPSBjYXVzZTtcbiAgICB0aGlzLmVycm9yID0gY2F1c2U7IC8vIGxlZ2FjeSBhdHRyaWJ1dGVcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIHRoaXMucmVzcG9uc2UgPSByZXNwb25zZTtcblxuICAgIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkgeyAvLyByZXF1aXJlZCBmb3Igbm9uLVY4IGVudmlyb25tZW50c1xuICAgICAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzKTtcbiAgICB9XG5cbn1cblJlcXVlc3RFcnJvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVycm9yLnByb3RvdHlwZSk7XG5SZXF1ZXN0RXJyb3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gUmVxdWVzdEVycm9yO1xuXG5cbmZ1bmN0aW9uIFN0YXR1c0NvZGVFcnJvcihzdGF0dXNDb2RlLCBib2R5LCBvcHRpb25zLCByZXNwb25zZSkge1xuXG4gICAgdGhpcy5uYW1lID0gJ1N0YXR1c0NvZGVFcnJvcic7XG4gICAgdGhpcy5zdGF0dXNDb2RlID0gc3RhdHVzQ29kZTtcbiAgICB0aGlzLm1lc3NhZ2UgPSBzdGF0dXNDb2RlICsgJyAtICcgKyAoSlNPTiAmJiBKU09OLnN0cmluZ2lmeSA/IEpTT04uc3RyaW5naWZ5KGJvZHkpIDogYm9keSk7XG4gICAgdGhpcy5lcnJvciA9IGJvZHk7IC8vIGxlZ2FjeSBhdHRyaWJ1dGVcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIHRoaXMucmVzcG9uc2UgPSByZXNwb25zZTtcblxuICAgIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkgeyAvLyByZXF1aXJlZCBmb3Igbm9uLVY4IGVudmlyb25tZW50c1xuICAgICAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzKTtcbiAgICB9XG5cbn1cblN0YXR1c0NvZGVFcnJvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVycm9yLnByb3RvdHlwZSk7XG5TdGF0dXNDb2RlRXJyb3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gU3RhdHVzQ29kZUVycm9yO1xuXG5cbmZ1bmN0aW9uIFRyYW5zZm9ybUVycm9yKGNhdXNlLCBvcHRpb25zLCByZXNwb25zZSkge1xuXG4gICAgdGhpcy5uYW1lID0gJ1RyYW5zZm9ybUVycm9yJztcbiAgICB0aGlzLm1lc3NhZ2UgPSBTdHJpbmcoY2F1c2UpO1xuICAgIHRoaXMuY2F1c2UgPSBjYXVzZTtcbiAgICB0aGlzLmVycm9yID0gY2F1c2U7IC8vIGxlZ2FjeSBhdHRyaWJ1dGVcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIHRoaXMucmVzcG9uc2UgPSByZXNwb25zZTtcblxuICAgIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkgeyAvLyByZXF1aXJlZCBmb3Igbm9uLVY4IGVudmlyb25tZW50c1xuICAgICAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzKTtcbiAgICB9XG5cbn1cblRyYW5zZm9ybUVycm9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRXJyb3IucHJvdG90eXBlKTtcblRyYW5zZm9ybUVycm9yLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFRyYW5zZm9ybUVycm9yO1xuXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFJlcXVlc3RFcnJvcjogUmVxdWVzdEVycm9yLFxuICAgIFN0YXR1c0NvZGVFcnJvcjogU3RhdHVzQ29kZUVycm9yLFxuICAgIFRyYW5zZm9ybUVycm9yOiBUcmFuc2Zvcm1FcnJvclxufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/request-promise-core/lib/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/request-promise-core/lib/plumbing.js":
/*!***********************************************************!*\
  !*** ./node_modules/request-promise-core/lib/plumbing.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar errors = __webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/request-promise-core/lib/errors.js\"),\n    isFunction = __webpack_require__(/*! lodash/isFunction */ \"(rsc)/./node_modules/lodash/isFunction.js\"),\n    isObjectLike = __webpack_require__(/*! lodash/isObjectLike */ \"(rsc)/./node_modules/lodash/isObjectLike.js\"),\n    isString = __webpack_require__(/*! lodash/isString */ \"(rsc)/./node_modules/lodash/isString.js\"),\n    isUndefined = __webpack_require__(/*! lodash/isUndefined */ \"(rsc)/./node_modules/lodash/isUndefined.js\");\n\n\nmodule.exports = function (options) {\n\n    var errorText = 'Please verify options'; // For better minification because this string is repeating\n\n    if (!isObjectLike(options)) {\n        throw new TypeError(errorText);\n    }\n\n    if (!isFunction(options.PromiseImpl)) {\n        throw new TypeError(errorText + '.PromiseImpl');\n    }\n\n    if (!isUndefined(options.constructorMixin) && !isFunction(options.constructorMixin)) {\n        throw new TypeError(errorText + '.PromiseImpl');\n    }\n\n    var PromiseImpl = options.PromiseImpl;\n    var constructorMixin = options.constructorMixin;\n\n\n    var plumbing = {};\n\n    plumbing.init = function (requestOptions) {\n\n        var self = this;\n\n        self._rp_promise = new PromiseImpl(function (resolve, reject) {\n            self._rp_resolve = resolve;\n            self._rp_reject = reject;\n            if (constructorMixin) {\n                constructorMixin.apply(self, arguments); // Using arguments since specific Promise libraries may pass additional parameters\n            }\n        });\n\n        self._rp_callbackOrig = requestOptions.callback;\n        requestOptions.callback = self.callback = function RP$callback(err, response, body) {\n            plumbing.callback.call(self, err, response, body);\n        };\n\n        if (isString(requestOptions.method)) {\n            requestOptions.method = requestOptions.method.toUpperCase();\n        }\n\n        requestOptions.transform = requestOptions.transform || plumbing.defaultTransformations[requestOptions.method];\n\n        self._rp_options = requestOptions;\n        self._rp_options.simple = requestOptions.simple !== false;\n        self._rp_options.resolveWithFullResponse = requestOptions.resolveWithFullResponse === true;\n        self._rp_options.transform2xxOnly = requestOptions.transform2xxOnly === true;\n\n    };\n\n    plumbing.defaultTransformations = {\n        HEAD: function (body, response, resolveWithFullResponse) {\n            return resolveWithFullResponse ? response : response.headers;\n        }\n    };\n\n    plumbing.callback = function (err, response, body) {\n\n        var self = this;\n\n        var origCallbackThrewException = false, thrownException = null;\n\n        if (isFunction(self._rp_callbackOrig)) {\n            try {\n                self._rp_callbackOrig.apply(self, arguments); // TODO: Apply to self mimics behavior of request@2. Is that also right for request@next?\n            } catch (e) {\n                origCallbackThrewException = true;\n                thrownException = e;\n            }\n        }\n\n        var is2xx = !err && /^2/.test('' + response.statusCode);\n\n        if (err) {\n\n            self._rp_reject(new errors.RequestError(err, self._rp_options, response));\n\n        } else if (self._rp_options.simple && !is2xx) {\n\n            if (isFunction(self._rp_options.transform) && self._rp_options.transform2xxOnly === false) {\n\n                (new PromiseImpl(function (resolve) {\n                    resolve(self._rp_options.transform(body, response, self._rp_options.resolveWithFullResponse)); // transform may return a Promise\n                }))\n                    .then(function (transformedResponse) {\n                        self._rp_reject(new errors.StatusCodeError(response.statusCode, body, self._rp_options, transformedResponse));\n                    })\n                    .catch(function (transformErr) {\n                        self._rp_reject(new errors.TransformError(transformErr, self._rp_options, response));\n                    });\n\n            } else {\n                self._rp_reject(new errors.StatusCodeError(response.statusCode, body, self._rp_options, response));\n            }\n\n        } else {\n\n            if (isFunction(self._rp_options.transform) && (is2xx || self._rp_options.transform2xxOnly === false)) {\n\n                (new PromiseImpl(function (resolve) {\n                    resolve(self._rp_options.transform(body, response, self._rp_options.resolveWithFullResponse)); // transform may return a Promise\n                }))\n                    .then(function (transformedResponse) {\n                        self._rp_resolve(transformedResponse);\n                    })\n                    .catch(function (transformErr) {\n                        self._rp_reject(new errors.TransformError(transformErr, self._rp_options, response));\n                    });\n\n            } else if (self._rp_options.resolveWithFullResponse) {\n                self._rp_resolve(response);\n            } else {\n                self._rp_resolve(body);\n            }\n\n        }\n\n        if (origCallbackThrewException) {\n            throw thrownException;\n        }\n\n    };\n\n    plumbing.exposePromiseMethod = function (exposeTo, bindTo, promisePropertyKey, methodToExpose, exposeAs) {\n\n        exposeAs = exposeAs || methodToExpose;\n\n        if (exposeAs in exposeTo) {\n            throw new Error('Unable to expose method \"' + exposeAs + '\"');\n        }\n\n        exposeTo[exposeAs] = function RP$exposed() {\n            var self = bindTo || this;\n            return self[promisePropertyKey][methodToExpose].apply(self[promisePropertyKey], arguments);\n        };\n\n    };\n\n    plumbing.exposePromise = function (exposeTo, bindTo, promisePropertyKey, exposeAs) {\n\n        exposeAs = exposeAs || 'promise';\n\n        if (exposeAs in exposeTo) {\n            throw new Error('Unable to expose method \"' + exposeAs + '\"');\n        }\n\n        exposeTo[exposeAs] = function RP$promise() {\n            var self = bindTo || this;\n            return self[promisePropertyKey];\n        };\n\n    };\n\n    return plumbing;\n\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/request-promise-core/lib/plumbing.js\n");

/***/ })

};
;