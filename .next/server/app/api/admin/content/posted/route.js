/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/admin/content/posted/route";
exports.ids = ["app/api/admin/content/posted/route"];
exports.modules = {

/***/ "(rsc)/./app/api/admin/content/posted/route.ts":
/*!***********************************************!*\
  !*** ./app/api/admin/content/posted/route.ts ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_services_posting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/services/posting */ \"(rsc)/./lib/services/posting.ts\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/types */ \"(rsc)/./types/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_services_posting__WEBPACK_IMPORTED_MODULE_1__, _lib_db__WEBPACK_IMPORTED_MODULE_2__]);\n([_lib_services_posting__WEBPACK_IMPORTED_MODULE_1__, _lib_db__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const limit = parseInt(searchParams.get('limit') || '10');\n        const offset = parseInt(searchParams.get('offset') || '0');\n        if (limit > 100) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Limit cannot exceed 100'\n            }, {\n                status: 400\n            });\n        }\n        const history = await _lib_services_posting__WEBPACK_IMPORTED_MODULE_1__.postingService.getPostingHistory(limit + offset);\n        const content = history.slice(offset, offset + limit);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            content,\n            pagination: {\n                limit,\n                offset,\n                total: history.length,\n                hasMore: history.length > offset + limit\n            }\n        });\n    } catch (error) {\n        await (0,_lib_db__WEBPACK_IMPORTED_MODULE_2__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_3__.LogLevel.ERROR, 'Failed to get posting history', 'PostingHistoryAPI', {\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error instanceof Error ? error.message : 'Unknown error'\n        }, {\n            status: 500\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2FkbWluL2NvbnRlbnQvcG9zdGVkL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXVEO0FBQ0E7QUFDZjtBQUNOO0FBRTNCLGVBQWVJLElBQUlDLE9BQW9CO0lBQzVDLElBQUk7UUFDRixNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHLElBQUlDLElBQUlGLFFBQVFHLEdBQUc7UUFDNUMsTUFBTUMsUUFBUUMsU0FBU0osYUFBYUssR0FBRyxDQUFDLFlBQVk7UUFDcEQsTUFBTUMsU0FBU0YsU0FBU0osYUFBYUssR0FBRyxDQUFDLGFBQWE7UUFFdEQsSUFBSUYsUUFBUSxLQUFLO1lBQ2YsT0FBT1QscURBQVlBLENBQUNhLElBQUksQ0FBQztnQkFDdkJDLE9BQU87WUFDVCxHQUFHO2dCQUFFQyxRQUFRO1lBQUk7UUFDbkI7UUFFQSxNQUFNQyxVQUFVLE1BQU1mLGlFQUFjQSxDQUFDZ0IsaUJBQWlCLENBQUNSLFFBQVFHO1FBQy9ELE1BQU1NLFVBQVVGLFFBQVFHLEtBQUssQ0FBQ1AsUUFBUUEsU0FBU0g7UUFFL0MsT0FBT1QscURBQVlBLENBQUNhLElBQUksQ0FBQztZQUN2Qks7WUFDQUUsWUFBWTtnQkFDVlg7Z0JBQ0FHO2dCQUNBUyxPQUFPTCxRQUFRTSxNQUFNO2dCQUNyQkMsU0FBU1AsUUFBUU0sTUFBTSxHQUFHVixTQUFTSDtZQUNyQztRQUNGO0lBRUYsRUFBRSxPQUFPSyxPQUFPO1FBQ2QsTUFBTVosc0RBQWFBLENBQ2pCQyw0Q0FBUUEsQ0FBQ3FCLEtBQUssRUFDZCxpQ0FDQSxxQkFDQTtZQUFFVixPQUFPQSxpQkFBaUJXLFFBQVFYLE1BQU1ZLE9BQU8sR0FBRztRQUFnQjtRQUdwRSxPQUFPMUIscURBQVlBLENBQUNhLElBQUksQ0FBQztZQUN2QkMsT0FBT0EsaUJBQWlCVyxRQUFRWCxNQUFNWSxPQUFPLEdBQUc7UUFDbEQsR0FBRztZQUFFWCxRQUFRO1FBQUk7SUFDbkI7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL2FkYW1zaGF3L0RldmVsb3BtZW50L3dlYnNpdGVzL2hvdGRvZy1kaWFyaWVzL2FwcC9hcGkvYWRtaW4vY29udGVudC9wb3N0ZWQvcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xuaW1wb3J0IHsgcG9zdGluZ1NlcnZpY2UgfSBmcm9tICdAL2xpYi9zZXJ2aWNlcy9wb3N0aW5nJ1xuaW1wb3J0IHsgbG9nVG9EYXRhYmFzZSB9IGZyb20gJ0AvbGliL2RiJ1xuaW1wb3J0IHsgTG9nTGV2ZWwgfSBmcm9tICdAL3R5cGVzJ1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBzZWFyY2hQYXJhbXMgfSA9IG5ldyBVUkwocmVxdWVzdC51cmwpXG4gICAgY29uc3QgbGltaXQgPSBwYXJzZUludChzZWFyY2hQYXJhbXMuZ2V0KCdsaW1pdCcpIHx8ICcxMCcpXG4gICAgY29uc3Qgb2Zmc2V0ID0gcGFyc2VJbnQoc2VhcmNoUGFyYW1zLmdldCgnb2Zmc2V0JykgfHwgJzAnKVxuXG4gICAgaWYgKGxpbWl0ID4gMTAwKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICBlcnJvcjogJ0xpbWl0IGNhbm5vdCBleGNlZWQgMTAwJ1xuICAgICAgfSwgeyBzdGF0dXM6IDQwMCB9KVxuICAgIH1cblxuICAgIGNvbnN0IGhpc3RvcnkgPSBhd2FpdCBwb3N0aW5nU2VydmljZS5nZXRQb3N0aW5nSGlzdG9yeShsaW1pdCArIG9mZnNldClcbiAgICBjb25zdCBjb250ZW50ID0gaGlzdG9yeS5zbGljZShvZmZzZXQsIG9mZnNldCArIGxpbWl0KVxuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIGNvbnRlbnQsXG4gICAgICBwYWdpbmF0aW9uOiB7XG4gICAgICAgIGxpbWl0LFxuICAgICAgICBvZmZzZXQsXG4gICAgICAgIHRvdGFsOiBoaXN0b3J5Lmxlbmd0aCxcbiAgICAgICAgaGFzTW9yZTogaGlzdG9yeS5sZW5ndGggPiBvZmZzZXQgKyBsaW1pdFxuICAgICAgfVxuICAgIH0pXG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBhd2FpdCBsb2dUb0RhdGFiYXNlKFxuICAgICAgTG9nTGV2ZWwuRVJST1IsXG4gICAgICAnRmFpbGVkIHRvIGdldCBwb3N0aW5nIGhpc3RvcnknLFxuICAgICAgJ1Bvc3RpbmdIaXN0b3J5QVBJJyxcbiAgICAgIHsgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InIH1cbiAgICApXG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InXG4gICAgfSwgeyBzdGF0dXM6IDUwMCB9KVxuICB9XG59Il0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsInBvc3RpbmdTZXJ2aWNlIiwibG9nVG9EYXRhYmFzZSIsIkxvZ0xldmVsIiwiR0VUIiwicmVxdWVzdCIsInNlYXJjaFBhcmFtcyIsIlVSTCIsInVybCIsImxpbWl0IiwicGFyc2VJbnQiLCJnZXQiLCJvZmZzZXQiLCJqc29uIiwiZXJyb3IiLCJzdGF0dXMiLCJoaXN0b3J5IiwiZ2V0UG9zdGluZ0hpc3RvcnkiLCJjb250ZW50Iiwic2xpY2UiLCJwYWdpbmF0aW9uIiwidG90YWwiLCJsZW5ndGgiLCJoYXNNb3JlIiwiRVJST1IiLCJFcnJvciIsIm1lc3NhZ2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/admin/content/posted/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closeDatabase: () => (/* binding */ closeDatabase),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   initializeDatabase: () => (/* binding */ initializeDatabase),\n/* harmony export */   logToDatabase: () => (/* binding */ logToDatabase),\n/* harmony export */   sql: () => (/* reexport safe */ _vercel_postgres__WEBPACK_IMPORTED_MODULE_1__.sql)\n/* harmony export */ });\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ \"pg\");\n/* harmony import */ var _vercel_postgres__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vercel/postgres */ \"(rsc)/./node_modules/@vercel/postgres/dist/index-node.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/types */ \"(rsc)/./types/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([pg__WEBPACK_IMPORTED_MODULE_0__]);\npg__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nclass DatabaseConnection {\n    constructor(){\n        this.pool = null;\n        this.isVercel = false;\n        this.isVercel = !!process.env.POSTGRES_URL;\n    }\n    getConfig() {\n        if (this.isVercel) {\n            return {\n                host: process.env.POSTGRES_HOST,\n                port: 5432,\n                database: process.env.POSTGRES_DATABASE,\n                user: process.env.POSTGRES_USER,\n                password: process.env.POSTGRES_PASSWORD,\n                ssl: true,\n                max: 20,\n                idleTimeoutMillis: 30000,\n                connectionTimeoutMillis: 2000\n            };\n        }\n        return {\n            host: process.env.DATABASE_HOST || 'localhost',\n            port: parseInt(process.env.DATABASE_PORT || '5432'),\n            database: process.env.DATABASE_NAME || 'hotdog_diaries_dev',\n            user: process.env.DATABASE_USER || 'postgres',\n            password: process.env.DATABASE_PASSWORD || 'password',\n            ssl: false,\n            max: 10,\n            idleTimeoutMillis: 30000,\n            connectionTimeoutMillis: 2000\n        };\n    }\n    async connect() {\n        if (this.pool) {\n            return;\n        }\n        const config = this.getConfig();\n        this.pool = new pg__WEBPACK_IMPORTED_MODULE_0__.Pool(config);\n        this.pool.on('error', (err)=>{\n            console.error('Unexpected database error on idle client', err);\n        });\n        this.pool.on('connect', ()=>{\n            console.log('Database connection established');\n        });\n        this.pool.on('remove', ()=>{\n            console.log('Database connection removed');\n        });\n        try {\n            const client = await this.pool.connect();\n            await client.query('SELECT NOW()');\n            client.release();\n            console.log('Database connection successful');\n        } catch (error) {\n            console.error('Database connection failed:', error);\n            throw error;\n        }\n    }\n    async disconnect() {\n        if (this.pool) {\n            await this.pool.end();\n            this.pool = null;\n            console.log('Database connection closed');\n        }\n    }\n    async query(text, params) {\n        if (this.isVercel) {\n            return await _vercel_postgres__WEBPACK_IMPORTED_MODULE_1__.sql.query(text, params || []);\n        }\n        if (!this.pool) {\n            await this.connect();\n        }\n        const start = Date.now();\n        try {\n            const result = await this.pool.query(text, params);\n            const duration = Date.now() - start;\n            console.log('Query executed', {\n                text,\n                duration,\n                rows: result.rowCount\n            });\n            return result;\n        } catch (error) {\n            const duration = Date.now() - start;\n            console.error('Query error', {\n                text,\n                duration,\n                error\n            });\n            throw error;\n        }\n    }\n    async getClient() {\n        if (this.isVercel) {\n            throw new Error('Client connections not supported in Vercel environment');\n        }\n        if (!this.pool) {\n            throw new Error('Database not connected');\n        }\n        return await this.pool.connect();\n    }\n    async healthCheck() {\n        try {\n            const start = Date.now();\n            await this.query('SELECT 1 as health_check');\n            const latency = Date.now() - start;\n            return {\n                connected: true,\n                latency\n            };\n        } catch (error) {\n            return {\n                connected: false,\n                error: error instanceof Error ? error.message : 'Unknown error'\n            };\n        }\n    }\n    async transaction(callback) {\n        if (this.isVercel) {\n            throw new Error('Transactions not supported in Vercel environment with @vercel/postgres');\n        }\n        const client = await this.getClient();\n        try {\n            await client.query('BEGIN');\n            const result = await callback(client);\n            await client.query('COMMIT');\n            return result;\n        } catch (error) {\n            await client.query('ROLLBACK');\n            throw error;\n        } finally{\n            client.release();\n        }\n    }\n}\nconst db = new DatabaseConnection();\nasync function initializeDatabase() {\n    try {\n        await db.connect();\n        console.log('Database initialized successfully');\n    } catch (error) {\n        console.error('Failed to initialize database:', error);\n        throw error;\n    }\n}\nasync function closeDatabase() {\n    try {\n        await db.disconnect();\n        console.log('Database closed successfully');\n    } catch (error) {\n        console.error('Failed to close database:', error);\n        throw error;\n    }\n}\nasync function logToDatabase(level, message, component, metadata) {\n    try {\n        // Convert LogLevel enum to database-compatible string\n        let dbLevel;\n        switch(level){\n            case _types__WEBPACK_IMPORTED_MODULE_2__.LogLevel.DEBUG:\n                dbLevel = 'debug';\n                break;\n            case _types__WEBPACK_IMPORTED_MODULE_2__.LogLevel.INFO:\n                dbLevel = 'info';\n                break;\n            case _types__WEBPACK_IMPORTED_MODULE_2__.LogLevel.WARN:\n                dbLevel = 'warning';\n                break;\n            case _types__WEBPACK_IMPORTED_MODULE_2__.LogLevel.ERROR:\n                dbLevel = 'error';\n                break;\n            case _types__WEBPACK_IMPORTED_MODULE_2__.LogLevel.FATAL:\n                dbLevel = 'error'; // Map FATAL to error since it's not in constraint\n                break;\n            default:\n                dbLevel = 'info';\n        }\n        await db.query(`INSERT INTO system_logs (log_level, message, component, metadata, created_at)\n       VALUES ($1, $2, $3, $4, NOW())`, [\n            dbLevel,\n            message,\n            component,\n            metadata ? JSON.stringify(metadata) : null\n        ]);\n    } catch (error) {\n        console.error('Failed to log to database:', error);\n    }\n}\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/posting.ts":
/*!*********************************!*\
  !*** ./lib/services/posting.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PostingService: () => (/* binding */ PostingService),\n/* harmony export */   postingService: () => (/* binding */ postingService)\n/* harmony export */ });\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/types */ \"(rsc)/./types/index.ts\");\n/* harmony import */ var _scheduling__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scheduling */ \"(rsc)/./lib/services/scheduling.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_db__WEBPACK_IMPORTED_MODULE_0__, _scheduling__WEBPACK_IMPORTED_MODULE_2__]);\n([_lib_db__WEBPACK_IMPORTED_MODULE_0__, _scheduling__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nclass PostingService {\n    static{\n        this.MIN_QUEUE_SIZE = 5;\n    }\n    static{\n        this.CRITICAL_QUEUE_SIZE = 2;\n    }\n    async postContent(contentId, manualTrigger = false) {\n        try {\n            const client = await _lib_db__WEBPACK_IMPORTED_MODULE_0__.db.getClient();\n            try {\n                await client.query('BEGIN');\n                const contentResult = await client.query('SELECT * FROM content_queue WHERE id = $1 AND is_approved = true AND is_posted = false', [\n                    contentId\n                ]);\n                if (contentResult.rows.length === 0) {\n                    await client.query('ROLLBACK');\n                    return {\n                        success: false,\n                        error: 'Content not found or not available for posting'\n                    };\n                }\n                const content = contentResult.rows[0];\n                const postOrder = await this.calculatePostOrder();\n                const now = new Date();\n                await client.query('UPDATE content_queue SET is_posted = true, posted_at = $1, updated_at = NOW() WHERE id = $2', [\n                    now,\n                    contentId\n                ]);\n                const postedResult = await client.query(`INSERT INTO posted_content (content_queue_id, posted_at, post_order, created_at, updated_at)\n           VALUES ($1, $2, $3, NOW(), NOW())\n           RETURNING *`, [\n                    contentId,\n                    now,\n                    postOrder\n                ]);\n                await client.query('COMMIT');\n                await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.INFO, 'Content posted successfully', 'PostingService', {\n                    contentId,\n                    postOrder,\n                    contentType: content.content_type,\n                    sourcePlatform: content.source_platform,\n                    manualTrigger\n                });\n                return {\n                    success: true,\n                    contentId,\n                    postOrder\n                };\n            } catch (error) {\n                await client.query('ROLLBACK');\n                throw error;\n            } finally{\n                client.release();\n            }\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to post content', 'PostingService', {\n                contentId,\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : 'Unknown error'\n            };\n        }\n    }\n    async ensureContentAvailable() {\n        try {\n            const queueStatus = await this.getQueueStatus();\n            if (queueStatus.totalApproved === 0) {\n                await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'No content available for posting', 'PostingService', {\n                    queueStatus\n                });\n                return false;\n            }\n            if (queueStatus.alertLevel === 'critical') {\n                await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.WARN, 'Critical queue level - very low content available', 'PostingService', {\n                    queueStatus\n                });\n            } else if (queueStatus.alertLevel === 'low') {\n                await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.WARN, 'Low queue level - content running low', 'PostingService', {\n                    queueStatus\n                });\n            }\n            return true;\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to check content availability', 'PostingService', {\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n            return false;\n        }\n    }\n    async handleEmptyQueue() {\n        try {\n            const queueStatus = await this.getQueueStatus();\n            if (queueStatus.totalApproved === 0) {\n                await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Empty queue detected - no content available for posting', 'PostingService', {\n                    queueStatus\n                });\n                await _scheduling__WEBPACK_IMPORTED_MODULE_2__.schedulingService.pauseScheduling();\n                await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.INFO, 'Automatic scheduling paused due to empty queue', 'PostingService');\n            }\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to handle empty queue', 'PostingService', {\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n        }\n    }\n    async getQueueStatus() {\n        try {\n            const result = await _lib_db__WEBPACK_IMPORTED_MODULE_0__.db.query(`\n        SELECT \n          COUNT(*) FILTER (WHERE is_approved = true AND is_posted = false) as total_approved,\n          COUNT(*) FILTER (WHERE is_approved = false AND is_posted = false) as total_pending,\n          COUNT(*) FILTER (WHERE is_posted = true) as total_posted\n        FROM content_queue\n      `);\n            const stats = result.rows[0];\n            const totalApproved = parseInt(stats.total_approved);\n            const totalPending = parseInt(stats.total_pending);\n            const totalPosted = parseInt(stats.total_posted);\n            let alertLevel = 'none';\n            let message = 'Queue is healthy';\n            let isHealthy = true;\n            if (totalApproved === 0) {\n                alertLevel = 'critical';\n                message = 'No approved content available for posting';\n                isHealthy = false;\n            } else if (totalApproved <= PostingService.CRITICAL_QUEUE_SIZE) {\n                alertLevel = 'critical';\n                message = `Critical: Only ${totalApproved} approved items remaining`;\n                isHealthy = false;\n            } else if (totalApproved <= PostingService.MIN_QUEUE_SIZE) {\n                alertLevel = 'low';\n                message = `Low: Only ${totalApproved} approved items remaining`;\n                isHealthy = true;\n            }\n            return {\n                totalApproved,\n                totalPending,\n                totalPosted,\n                isHealthy,\n                alertLevel,\n                message\n            };\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to get queue status', 'PostingService', {\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n            return {\n                totalApproved: 0,\n                totalPending: 0,\n                totalPosted: 0,\n                isHealthy: false,\n                alertLevel: 'critical',\n                message: 'Failed to check queue status'\n            };\n        }\n    }\n    async getPostingHistory(limit = 10) {\n        try {\n            const result = await _lib_db__WEBPACK_IMPORTED_MODULE_0__.db.query(`\n        SELECT \n          pc.*,\n          cq.content_type,\n          cq.source_platform,\n          cq.content_text,\n          cq.content_image_url,\n          cq.content_video_url,\n          cq.original_author,\n          cq.original_url\n        FROM posted_content pc\n        JOIN content_queue cq ON pc.content_queue_id = cq.id\n        ORDER BY pc.posted_at DESC\n        LIMIT $1\n      `, [\n                limit\n            ]);\n            return result.rows;\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to get posting history', 'PostingService', {\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n            return [];\n        }\n    }\n    async getPostingStats() {\n        try {\n            const result = await _lib_db__WEBPACK_IMPORTED_MODULE_0__.db.query(`\n        SELECT \n          COUNT(*) FILTER (WHERE posted_at >= CURRENT_DATE) as todays_posts,\n          COUNT(*) FILTER (WHERE posted_at >= CURRENT_DATE - INTERVAL '7 days') as this_weeks_posts,\n          COUNT(*) FILTER (WHERE posted_at >= CURRENT_DATE - INTERVAL '30 days') as this_months_posts,\n          COUNT(*) as total_posts,\n          ROUND(\n            COUNT(*) FILTER (WHERE posted_at >= CURRENT_DATE - INTERVAL '30 days') / 30.0, \n            2\n          ) as avg_posts_per_day\n        FROM posted_content\n      `);\n            const stats = result.rows[0];\n            return {\n                todaysPosts: parseInt(stats.todays_posts),\n                thisWeeksPosts: parseInt(stats.this_weeks_posts),\n                thisMonthsPosts: parseInt(stats.this_months_posts),\n                totalPosts: parseInt(stats.total_posts),\n                avgPostsPerDay: parseFloat(stats.avg_posts_per_day)\n            };\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to get posting stats', 'PostingService', {\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n            return {\n                todaysPosts: 0,\n                thisWeeksPosts: 0,\n                thisMonthsPosts: 0,\n                totalPosts: 0,\n                avgPostsPerDay: 0\n            };\n        }\n    }\n    async processScheduledPost() {\n        try {\n            const isSchedulingEnabled = await _scheduling__WEBPACK_IMPORTED_MODULE_2__.schedulingService.getScheduleConfig();\n            if (!isSchedulingEnabled.is_enabled) {\n                await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.INFO, 'Scheduling disabled, skipping scheduled post', 'PostingService');\n                return {\n                    success: false,\n                    error: 'Scheduling is disabled'\n                };\n            }\n            const isPostingTime = await _scheduling__WEBPACK_IMPORTED_MODULE_2__.schedulingService.isPostingTime();\n            if (!isPostingTime) {\n                await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.INFO, 'Not posting time, skipping scheduled post', 'PostingService');\n                return {\n                    success: false,\n                    error: 'Not posting time'\n                };\n            }\n            const contentAvailable = await this.ensureContentAvailable();\n            if (!contentAvailable) {\n                await this.handleEmptyQueue();\n                return {\n                    success: false,\n                    error: 'No content available for posting'\n                };\n            }\n            const selectedContent = await _scheduling__WEBPACK_IMPORTED_MODULE_2__.schedulingService.selectRandomContent();\n            if (!selectedContent) {\n                await this.handleEmptyQueue();\n                return {\n                    success: false,\n                    error: 'Failed to select content for posting'\n                };\n            }\n            const result = await this.postContent(selectedContent.id, false);\n            if (result.success) {\n                await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.INFO, 'Scheduled post processed successfully', 'PostingService', {\n                    contentId: selectedContent.id,\n                    postOrder: result.postOrder\n                });\n            }\n            return result;\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to process scheduled post', 'PostingService', {\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : 'Unknown error'\n            };\n        }\n    }\n    async calculatePostOrder() {\n        const today = new Date();\n        const startOfDay = new Date(today);\n        startOfDay.setHours(0, 0, 0, 0);\n        const endOfDay = new Date(today);\n        endOfDay.setHours(23, 59, 59, 999);\n        const result = await _lib_db__WEBPACK_IMPORTED_MODULE_0__.db.query(`SELECT COALESCE(MAX(post_order), 0) + 1 as next_order\n       FROM posted_content\n       WHERE posted_at >= $1 AND posted_at <= $2`, [\n            startOfDay,\n            endOfDay\n        ]);\n        return Math.min(result.rows[0].next_order, 6);\n    }\n}\nconst postingService = new PostingService();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/posting.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/scheduling.ts":
/*!************************************!*\
  !*** ./lib/services/scheduling.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchedulingService: () => (/* binding */ SchedulingService),\n/* harmony export */   schedulingService: () => (/* binding */ schedulingService)\n/* harmony export */ });\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/types */ \"(rsc)/./types/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_db__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_db__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nclass SchedulingService {\n    static{\n        this.DEFAULT_MEAL_TIMES = [\n            '08:00',\n            '10:00',\n            '12:00',\n            '15:00',\n            '18:00',\n            '20:00'\n        ];\n    }\n    static{\n        this.DEFAULT_TIMEZONE = 'America/New_York';\n    }\n    async getScheduleConfig() {\n        try {\n            const result = await _lib_db__WEBPACK_IMPORTED_MODULE_0__.db.query('SELECT * FROM schedule_config ORDER BY created_at DESC LIMIT 1');\n            if (result.rows.length === 0) {\n                return await this.createDefaultScheduleConfig();\n            }\n            return result.rows[0];\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to get schedule config', 'SchedulingService', {\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n            throw error;\n        }\n    }\n    async updateScheduleConfig(config) {\n        try {\n            const currentConfig = await this.getScheduleConfig();\n            const result = await _lib_db__WEBPACK_IMPORTED_MODULE_0__.db.query(`UPDATE schedule_config \n         SET meal_times = $1, timezone = $2, is_enabled = $3, updated_at = NOW()\n         WHERE id = $4\n         RETURNING *`, [\n                config.meal_times || currentConfig.meal_times,\n                config.timezone || currentConfig.timezone,\n                config.is_enabled !== undefined ? config.is_enabled : currentConfig.is_enabled,\n                currentConfig.id\n            ]);\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.INFO, 'Schedule config updated', 'SchedulingService', {\n                updatedConfig: result.rows[0]\n            });\n            return result.rows[0];\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to update schedule config', 'SchedulingService', {\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n            throw error;\n        }\n    }\n    async scheduleNextPost() {\n        try {\n            const config = await this.getScheduleConfig();\n            if (!config.is_enabled) {\n                await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.INFO, 'Scheduling disabled, no next post scheduled', 'SchedulingService');\n                return null;\n            }\n            const nextTime = await this.getNextScheduledTime();\n            if (!nextTime) {\n                await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.WARN, 'No next scheduled time available', 'SchedulingService');\n                return null;\n            }\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.INFO, 'Next post scheduled', 'SchedulingService', {\n                nextScheduledTime: nextTime\n            });\n            return nextTime;\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to schedule next post', 'SchedulingService', {\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n            throw error;\n        }\n    }\n    async getNextScheduledTime() {\n        try {\n            const config = await this.getScheduleConfig();\n            const now = new Date();\n            const timeZone = config.timezone || SchedulingService.DEFAULT_TIMEZONE;\n            const mealTimes = config.meal_times || SchedulingService.DEFAULT_MEAL_TIMES;\n            const today = new Date(now.toLocaleString('en-US', {\n                timeZone\n            }));\n            const todayStr = today.toISOString().split('T')[0];\n            for (const mealTime of mealTimes.sort()){\n                const [hours, minutes] = mealTime.split(':').map(Number);\n                const scheduledTime = new Date(`${todayStr}T${mealTime}:00`);\n                const scheduledTimeInTZ = new Date(scheduledTime.toLocaleString('en-US', {\n                    timeZone\n                }));\n                if (scheduledTimeInTZ > now) {\n                    const hasPostedToday = await this.hasPostedAtTime(scheduledTime, mealTime);\n                    if (!hasPostedToday) {\n                        return scheduledTimeInTZ;\n                    }\n                }\n            }\n            const tomorrow = new Date(today);\n            tomorrow.setDate(tomorrow.getDate() + 1);\n            const tomorrowStr = tomorrow.toISOString().split('T')[0];\n            const firstMealTime = mealTimes.sort()[0];\n            const tomorrowFirstMeal = new Date(`${tomorrowStr}T${firstMealTime}:00`);\n            return new Date(tomorrowFirstMeal.toLocaleString('en-US', {\n                timeZone\n            }));\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to get next scheduled time', 'SchedulingService', {\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n            return null;\n        }\n    }\n    async isPostingTime(toleranceMinutes = 5) {\n        try {\n            const config = await this.getScheduleConfig();\n            if (!config.is_enabled) {\n                return false;\n            }\n            const now = new Date();\n            const timeZone = config.timezone || SchedulingService.DEFAULT_TIMEZONE;\n            const mealTimes = config.meal_times || SchedulingService.DEFAULT_MEAL_TIMES;\n            const currentTime = new Date(now.toLocaleString('en-US', {\n                timeZone\n            }));\n            const currentHour = currentTime.getHours();\n            const currentMinute = currentTime.getMinutes();\n            for (const mealTime of mealTimes){\n                const [hours, minutes] = mealTime.split(':').map(Number);\n                const timeDifference = Math.abs(currentHour * 60 + currentMinute - (hours * 60 + minutes));\n                if (timeDifference <= toleranceMinutes) {\n                    const hasPostedRecently = await this.hasPostedAtTime(currentTime, mealTime);\n                    return !hasPostedRecently;\n                }\n            }\n            return false;\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to check if posting time', 'SchedulingService', {\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n            return false;\n        }\n    }\n    async selectRandomContent() {\n        try {\n            const result = await _lib_db__WEBPACK_IMPORTED_MODULE_0__.db.query(`SELECT * FROM content_queue \n         WHERE is_approved = true \n         AND is_posted = false \n         ORDER BY RANDOM() \n         LIMIT 1`);\n            if (result.rows.length === 0) {\n                await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.WARN, 'No approved content available for posting', 'SchedulingService');\n                return null;\n            }\n            const selectedContent = result.rows[0];\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.INFO, 'Random content selected for posting', 'SchedulingService', {\n                contentId: selectedContent.id,\n                contentType: selectedContent.content_type\n            });\n            return selectedContent;\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to select random content', 'SchedulingService', {\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n            throw error;\n        }\n    }\n    async getPostingSchedule() {\n        try {\n            const config = await this.getScheduleConfig();\n            const now = new Date();\n            const timeZone = config.timezone || SchedulingService.DEFAULT_TIMEZONE;\n            const mealTimes = config.meal_times || SchedulingService.DEFAULT_MEAL_TIMES;\n            const nextPostTime = await this.getNextScheduledTime();\n            const isPostingTime = await this.isPostingTime();\n            const today = new Date(now.toLocaleString('en-US', {\n                timeZone\n            }));\n            const todayStr = today.toISOString().split('T')[0];\n            const todaysSchedule = await Promise.all(mealTimes.map(async (time)=>{\n                const scheduledDate = new Date(`${todayStr}T${time}:00`);\n                const posted = await this.hasPostedAtTime(scheduledDate, time);\n                return {\n                    time,\n                    posted,\n                    scheduledDate: new Date(scheduledDate.toLocaleString('en-US', {\n                        timeZone\n                    }))\n                };\n            }));\n            return {\n                nextPostTime: nextPostTime || new Date(),\n                nextMealTime: nextPostTime ? mealTimes.find((time)=>{\n                    const [hours, minutes] = time.split(':').map(Number);\n                    return nextPostTime.getHours() === hours && nextPostTime.getMinutes() === minutes;\n                }) || mealTimes[0] : mealTimes[0],\n                timeUntilNext: nextPostTime ? nextPostTime.getTime() - now.getTime() : 0,\n                isPostingTime,\n                todaysSchedule: todaysSchedule.sort((a, b)=>a.time.localeCompare(b.time))\n            };\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to get posting schedule', 'SchedulingService', {\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n            throw error;\n        }\n    }\n    async pauseScheduling() {\n        try {\n            await this.updateScheduleConfig({\n                is_enabled: false\n            });\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.INFO, 'Scheduling paused', 'SchedulingService');\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to pause scheduling', 'SchedulingService', {\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n            throw error;\n        }\n    }\n    async resumeScheduling() {\n        try {\n            await this.updateScheduleConfig({\n                is_enabled: true\n            });\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.INFO, 'Scheduling resumed', 'SchedulingService');\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR, 'Failed to resume scheduling', 'SchedulingService', {\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n            throw error;\n        }\n    }\n    async createDefaultScheduleConfig() {\n        const result = await _lib_db__WEBPACK_IMPORTED_MODULE_0__.db.query(`INSERT INTO schedule_config (meal_times, timezone, is_enabled, created_at, updated_at)\n       VALUES ($1, $2, $3, NOW(), NOW())\n       RETURNING *`, [\n            SchedulingService.DEFAULT_MEAL_TIMES,\n            SchedulingService.DEFAULT_TIMEZONE,\n            true\n        ]);\n        await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.logToDatabase)(_types__WEBPACK_IMPORTED_MODULE_1__.LogLevel.INFO, 'Default schedule config created', 'SchedulingService', {\n            config: result.rows[0]\n        });\n        return result.rows[0];\n    }\n    async hasPostedAtTime(targetTime, mealTime) {\n        const startOfDay = new Date(targetTime);\n        startOfDay.setHours(0, 0, 0, 0);\n        const endOfDay = new Date(targetTime);\n        endOfDay.setHours(23, 59, 59, 999);\n        const result = await _lib_db__WEBPACK_IMPORTED_MODULE_0__.db.query(`SELECT COUNT(*) as count FROM posted_content \n       WHERE posted_at >= $1 AND posted_at <= $2\n       AND DATE_PART('hour', posted_at) = $3\n       AND DATE_PART('minute', posted_at) = $4`, [\n            startOfDay.toISOString(),\n            endOfDay.toISOString(),\n            ...mealTime.split(':').map(Number)\n        ]);\n        return parseInt(result.rows[0].count) > 0;\n    }\n}\nconst schedulingService = new SchedulingService();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/scheduling.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fcontent%2Fposted%2Froute&page=%2Fapi%2Fadmin%2Fcontent%2Fposted%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fcontent%2Fposted%2Froute.ts&appDir=%2FUsers%2Fadamshaw%2FDevelopment%2Fwebsites%2Fhotdog-diaries%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fadamshaw%2FDevelopment%2Fwebsites%2Fhotdog-diaries&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fcontent%2Fposted%2Froute&page=%2Fapi%2Fadmin%2Fcontent%2Fposted%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fcontent%2Fposted%2Froute.ts&appDir=%2FUsers%2Fadamshaw%2FDevelopment%2Fwebsites%2Fhotdog-diaries%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fadamshaw%2FDevelopment%2Fwebsites%2Fhotdog-diaries&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_adamshaw_Development_websites_hotdog_diaries_app_api_admin_content_posted_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/admin/content/posted/route.ts */ \"(rsc)/./app/api/admin/content/posted/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_Users_adamshaw_Development_websites_hotdog_diaries_app_api_admin_content_posted_route_ts__WEBPACK_IMPORTED_MODULE_16__]);\n_Users_adamshaw_Development_websites_hotdog_diaries_app_api_admin_content_posted_route_ts__WEBPACK_IMPORTED_MODULE_16__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/admin/content/posted/route\",\n        pathname: \"/api/admin/content/posted\",\n        filename: \"route\",\n        bundlePath: \"app/api/admin/content/posted/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"/Users/adamshaw/Development/websites/hotdog-diaries/app/api/admin/content/posted/route.ts\",\n    nextConfigOutput,\n    userland: _Users_adamshaw_Development_websites_hotdog_diaries_app_api_admin_content_posted_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/admin/content/posted/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fcontent%2Fposted%2Froute&page=%2Fapi%2Fadmin%2Fcontent%2Fposted%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fcontent%2Fposted%2Froute.ts&appDir=%2FUsers%2Fadamshaw%2FDevelopment%2Fwebsites%2Fhotdog-diaries%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fadamshaw%2FDevelopment%2Fwebsites%2Fhotdog-diaries&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./types/index.ts":
/*!************************!*\
  !*** ./types/index.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContentType: () => (/* binding */ ContentType),\n/* harmony export */   LogLevel: () => (/* binding */ LogLevel),\n/* harmony export */   SourcePlatform: () => (/* binding */ SourcePlatform)\n/* harmony export */ });\n// Enums\nvar ContentType = /*#__PURE__*/ function(ContentType) {\n    ContentType[\"TEXT\"] = \"text\";\n    ContentType[\"IMAGE\"] = \"image\";\n    ContentType[\"VIDEO\"] = \"video\";\n    ContentType[\"MIXED\"] = \"mixed\";\n    return ContentType;\n}({});\nvar SourcePlatform = /*#__PURE__*/ function(SourcePlatform) {\n    SourcePlatform[\"REDDIT\"] = \"reddit\";\n    SourcePlatform[\"YOUTUBE\"] = \"youtube\";\n    SourcePlatform[\"FLICKR\"] = \"flickr\";\n    SourcePlatform[\"UNSPLASH\"] = \"unsplash\";\n    SourcePlatform[\"NEWS\"] = \"news\";\n    SourcePlatform[\"MASTODON\"] = \"mastodon\";\n    return SourcePlatform;\n}({});\nvar LogLevel = /*#__PURE__*/ function(LogLevel) {\n    LogLevel[\"DEBUG\"] = \"debug\";\n    LogLevel[\"INFO\"] = \"info\";\n    LogLevel[\"WARN\"] = \"warn\";\n    LogLevel[\"ERROR\"] = \"error\";\n    LogLevel[\"FATAL\"] = \"fatal\";\n    return LogLevel;\n}({});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi90eXBlcy9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUEwRkEsUUFBUTtBQUNELHlDQUFLQTs7Ozs7V0FBQUE7TUFLWDtBQUVNLDRDQUFLQzs7Ozs7OztXQUFBQTtNQU9YO0FBRU0sc0NBQUtDOzs7Ozs7V0FBQUE7TUFNWCIsInNvdXJjZXMiOlsiL1VzZXJzL2FkYW1zaGF3L0RldmVsb3BtZW50L3dlYnNpdGVzL2hvdGRvZy1kaWFyaWVzL3R5cGVzL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgSGVhbHRoQ2hlY2tSZXNwb25zZSB7XG4gIHN0YXR1czogJ2hlYWx0aHknIHwgJ3VuaGVhbHRoeSdcbiAgdGltZXN0YW1wOiBzdHJpbmdcbiAgc2VydmljZTogc3RyaW5nXG4gIHZlcnNpb24/OiBzdHJpbmdcbiAgdXB0aW1lPzogbnVtYmVyXG4gIGVudmlyb25tZW50Pzogc3RyaW5nXG4gIGNoZWNrcz86IHtcbiAgICBkYXRhYmFzZT86IHN0cmluZ1xuICAgIHNvY2lhbE1lZGlhU2Nhbm5lcj86IHN0cmluZ1xuICAgIGNvbnRlbnRTY2hlZHVsZXI/OiBzdHJpbmdcbiAgfVxuICBlcnJvcj86IHN0cmluZ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEhvdGRvZ1Bvc3Qge1xuICBpZDogc3RyaW5nXG4gIGNvbnRlbnQ6IHN0cmluZ1xuICBpbWFnZVVybD86IHN0cmluZ1xuICBzb3VyY2U6ICdyZWRkaXQnIHwgJ3lvdXR1YmUnIHwgJ2ZsaWNrcicgfCAndW5zcGxhc2gnIHwgJ25ld3MnIHwgJ21hc3RvZG9uJ1xuICBzb3VyY2VVcmw6IHN0cmluZ1xuICB0aW1lc3RhbXA6IHN0cmluZ1xuICBlbmdhZ2VtZW50OiB7XG4gICAgbGlrZXM6IG51bWJlclxuICAgIHNoYXJlczogbnVtYmVyXG4gICAgY29tbWVudHM6IG51bWJlclxuICB9XG4gIHByb2Nlc3NlZDogYm9vbGVhblxufVxuXG5leHBvcnQgaW50ZXJmYWNlIE5hdkl0ZW0ge1xuICBocmVmOiBzdHJpbmdcbiAgbGFiZWw6IHN0cmluZ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFwaVJlc3BvbnNlPFQgPSBhbnk+IHtcbiAgc3VjY2VzczogYm9vbGVhblxuICBkYXRhPzogVFxuICBlcnJvcj86IHN0cmluZ1xuICBtZXNzYWdlPzogc3RyaW5nXG59XG5cbi8vIERhdGFiYXNlIEVudGl0eSBUeXBlc1xuZXhwb3J0IGludGVyZmFjZSBDb250ZW50UXVldWUge1xuICBpZDogbnVtYmVyXG4gIGNvbnRlbnRfdGV4dD86IHN0cmluZ1xuICBjb250ZW50X2ltYWdlX3VybD86IHN0cmluZ1xuICBjb250ZW50X3ZpZGVvX3VybD86IHN0cmluZ1xuICBjb250ZW50X3R5cGU6IENvbnRlbnRUeXBlXG4gIHNvdXJjZV9wbGF0Zm9ybTogU291cmNlUGxhdGZvcm1cbiAgb3JpZ2luYWxfdXJsOiBzdHJpbmdcbiAgb3JpZ2luYWxfYXV0aG9yPzogc3RyaW5nXG4gIHNjcmFwZWRfYXQ6IERhdGVcbiAgY29udGVudF9oYXNoOiBzdHJpbmdcbiAgaXNfcG9zdGVkOiBib29sZWFuXG4gIHBvc3RlZF9hdD86IERhdGVcbiAgaXNfYXBwcm92ZWQ6IGJvb2xlYW5cbiAgYWRtaW5fbm90ZXM/OiBzdHJpbmdcbiAgY3JlYXRlZF9hdDogRGF0ZVxuICB1cGRhdGVkX2F0OiBEYXRlXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUG9zdGVkQ29udGVudCB7XG4gIGlkOiBudW1iZXJcbiAgY29udGVudF9xdWV1ZV9pZDogbnVtYmVyXG4gIHBvc3RlZF9hdDogRGF0ZVxuICBzY2hlZHVsZWRfdGltZT86IERhdGVcbiAgcG9zdF9vcmRlcjogbnVtYmVyXG4gIGNyZWF0ZWRfYXQ6IERhdGVcbiAgdXBkYXRlZF9hdDogRGF0ZVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN5c3RlbUxvZyB7XG4gIGlkOiBudW1iZXJcbiAgbG9nX2xldmVsOiBMb2dMZXZlbFxuICBtZXNzYWdlOiBzdHJpbmdcbiAgY29tcG9uZW50OiBzdHJpbmdcbiAgbWV0YWRhdGE/OiBSZWNvcmQ8c3RyaW5nLCBhbnk+XG4gIGNyZWF0ZWRfYXQ6IERhdGVcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBZG1pblVzZXIge1xuICBpZDogbnVtYmVyXG4gIHVzZXJuYW1lOiBzdHJpbmdcbiAgcGFzc3dvcmRfaGFzaDogc3RyaW5nXG4gIGxhc3RfbG9naW4/OiBEYXRlXG4gIGNyZWF0ZWRfYXQ6IERhdGVcbiAgdXBkYXRlZF9hdDogRGF0ZVxufVxuXG4vLyBFbnVtc1xuZXhwb3J0IGVudW0gQ29udGVudFR5cGUge1xuICBURVhUID0gJ3RleHQnLFxuICBJTUFHRSA9ICdpbWFnZScsXG4gIFZJREVPID0gJ3ZpZGVvJyxcbiAgTUlYRUQgPSAnbWl4ZWQnXG59XG5cbmV4cG9ydCBlbnVtIFNvdXJjZVBsYXRmb3JtIHtcbiAgUkVERElUID0gJ3JlZGRpdCcsXG4gIFlPVVRVQkUgPSAneW91dHViZScsXG4gIEZMSUNLUiA9ICdmbGlja3InLFxuICBVTlNQTEFTSCA9ICd1bnNwbGFzaCcsXG4gIE5FV1MgPSAnbmV3cycsXG4gIE1BU1RPRE9OID0gJ21hc3RvZG9uJ1xufVxuXG5leHBvcnQgZW51bSBMb2dMZXZlbCB7XG4gIERFQlVHID0gJ2RlYnVnJyxcbiAgSU5GTyA9ICdpbmZvJyxcbiAgV0FSTiA9ICd3YXJuJyxcbiAgRVJST1IgPSAnZXJyb3InLFxuICBGQVRBTCA9ICdmYXRhbCdcbn1cblxuLy8gQVBJIFJlcXVlc3QvUmVzcG9uc2UgVHlwZXNcbmV4cG9ydCBpbnRlcmZhY2UgQ29udGVudEFwaVJlc3BvbnNlIHtcbiAgc3VjY2VzczogYm9vbGVhblxuICBkYXRhOiB7XG4gICAgY29udGVudDogUG9zdGVkQ29udGVudFtdXG4gICAgcGFnaW5hdGlvbjoge1xuICAgICAgcGFnZTogbnVtYmVyXG4gICAgICBsaW1pdDogbnVtYmVyXG4gICAgICB0b3RhbDogbnVtYmVyXG4gICAgICB0b3RhbFBhZ2VzOiBudW1iZXJcbiAgICB9XG4gIH1cbiAgbWVzc2FnZT86IHN0cmluZ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIERhdGFiYXNlSGVhbHRoQ2hlY2sge1xuICBjb25uZWN0ZWQ6IGJvb2xlYW5cbiAgbGF0ZW5jeT86IG51bWJlclxuICBlcnJvcj86IHN0cmluZ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEVuaGFuY2VkSGVhbHRoUmVzcG9uc2UgZXh0ZW5kcyBIZWFsdGhDaGVja1Jlc3BvbnNlIHtcbiAgY2hlY2tzOiB7XG4gICAgZGF0YWJhc2U6IERhdGFiYXNlSGVhbHRoQ2hlY2tcbiAgICBzb2NpYWxNZWRpYVNjYW5uZXI/OiBzdHJpbmdcbiAgICBjb250ZW50U2NoZWR1bGVyPzogc3RyaW5nXG4gIH1cbn0iXSwibmFtZXMiOlsiQ29udGVudFR5cGUiLCJTb3VyY2VQbGF0Zm9ybSIsIkxvZ0xldmVsIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./types/index.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = import("pg");;

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@neondatabase","vendor-chunks/ws","vendor-chunks/@vercel","vendor-chunks/node-gyp-build","vendor-chunks/bufferutil"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fcontent%2Fposted%2Froute&page=%2Fapi%2Fadmin%2Fcontent%2Fposted%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fcontent%2Fposted%2Froute.ts&appDir=%2FUsers%2Fadamshaw%2FDevelopment%2Fwebsites%2Fhotdog-diaries%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fadamshaw%2FDevelopment%2Fwebsites%2Fhotdog-diaries&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();