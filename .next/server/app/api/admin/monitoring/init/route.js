"use strict";(()=>{var a={};a.id=3549,a.ids=[3549],a.modules={261:a=>{a.exports=require("next/dist/shared/lib/router/utils/app-paths")},2369:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{X:()=>l});var e=c(99986),f=c(59794),g=c(73790),h=c(34644),i=c(36221),j=a([e,f,g,h,i]);[e,f,g,h,i]=j.then?(await j)():j;class k{constructor(){this.monitoringRules=new Map,this.scheduledJobs=new Map,this.executionHistory=[],this.alertCorrelations=[],this.isActive=!1,this.registerDefaultMonitoringRules(),this.registerAlertCorrelations()}async start(){if(this.isActive)return void await e.RE.logWarning("ProactiveMonitoringService","Monitoring already active");for(let[a,b]of(this.isActive=!0,await e.RE.logInfo("ProactiveMonitoringService","Starting proactive monitoring"),this.monitoringRules))b.enabled&&this.scheduleMonitoringRule(a);this.startAlertCorrelation(),await e.RE.logInfo("ProactiveMonitoringService","Proactive monitoring started",{activeRules:Array.from(this.monitoringRules.values()).filter(a=>a.enabled).length,totalRules:this.monitoringRules.size})}async stop(){if(this.isActive){for(let[a,b]of(this.isActive=!1,this.scheduledJobs))clearInterval(b);this.scheduledJobs.clear(),await e.RE.logInfo("ProactiveMonitoringService","Proactive monitoring stopped")}}registerMonitoringRule(a){this.monitoringRules.set(a.id,a),this.isActive&&a.enabled&&this.scheduleMonitoringRule(a.id),e.RE.logInfo("ProactiveMonitoringService",`Registered monitoring rule: ${a.name}`,{ruleId:a.id,category:a.category,enabled:a.enabled,conditionCount:a.conditions.length,actionCount:a.actions.length})}async executeMonitoringRule(a){let b=this.monitoringRules.get(a);if(!b)throw Error(`Monitoring rule not found: ${a}`);let c=Date.now(),d={ruleId:a,executedAt:new Date,conditionsMet:!1,actionsExecuted:0,duration:0,details:{}};try{if(b.schedule.activeHours){let a=new Date().getHours(),{start:c,end:e}=b.schedule.activeHours;if(c<=e){if(a<c||a>e)return d.details.skipped="Outside active hours",d}else if(a<c&&a>e)return d.details.skipped="Outside active hours",d}await e.RE.logDebug("ProactiveMonitoringService",`Executing monitoring rule: ${b.name}`,{ruleId:a,category:b.category});let c=await Promise.all(b.conditions.map(a=>this.evaluateCondition(a)));if(d.conditionsMet=c.every(a=>a.met),d.details.conditionResults=c,d.conditionsMet){for(let f of(await e.RE.logInfo("ProactiveMonitoringService",`Monitoring rule conditions met: ${b.name}`,{ruleId:a,conditionResults:c}),b.actions))try{await this.executeMonitoringAction(f,b,d.details),d.actionsExecuted++}catch(b){await e.RE.logError("ProactiveMonitoringService","Failed to execute monitoring action",{ruleId:a,actionType:f.type,error:b.message},b),d.error=b.message}await g.z.recordCustomMetric("monitoring_rule_triggered",1,"count",{ruleId:a,category:b.category,actionsExecuted:d.actionsExecuted.toString()})}}catch(c){d.error=c.message,await e.RE.logError("ProactiveMonitoringService",`Error executing monitoring rule: ${b.name}`,{ruleId:a,error:c.message},c)}return d.duration=Date.now()-c,this.executionHistory.push(d),this.executionHistory.length>1e3&&this.executionHistory.shift(),d}getMonitoringStatistics(){let a=this.executionHistory.filter(a=>Date.now()-a.executedAt.getTime()<864e5),b=a.filter(a=>a.conditionsMet),c=a.filter(a=>!a.error),d=a.reduce((a,b)=>a+b.duration,0),e=a.length>0?Math.round(d/a.length):0;return{totalRules:this.monitoringRules.size,activeRules:Array.from(this.monitoringRules.values()).filter(a=>a.enabled).length,totalExecutions:a.length,successfulExecutions:c.length,triggeredExecutions:b.length,averageExecutionTime:e,recentTriggers:b.slice(-10)}}setMonitoringRuleEnabled(a,b){let c=this.monitoringRules.get(a);c&&(c.enabled=b,this.isActive&&(b?this.scheduleMonitoringRule(a):this.unscheduleMonitoringRule(a)),e.RE.logInfo("ProactiveMonitoringService",`Monitoring rule ${b?"enabled":"disabled"}: ${c.name}`,{ruleId:a,enabled:b}))}getMonitoringRules(){return Array.from(this.monitoringRules.values())}scheduleMonitoringRule(a){let b=this.monitoringRules.get(a);if(!b||!b.enabled)return;this.unscheduleMonitoringRule(a);let c=0,d=setInterval(async()=>{try{await this.executeMonitoringRule(a),c++,b.schedule.maxExecutions&&c>=b.schedule.maxExecutions&&(this.unscheduleMonitoringRule(a),await e.RE.logInfo("ProactiveMonitoringService",`Monitoring rule reached max executions: ${b.name}`,{ruleId:a,executionCount:c,maxExecutions:b.schedule.maxExecutions}))}catch(c){await e.RE.logError("ProactiveMonitoringService",`Error in scheduled monitoring rule: ${b.name}`,{ruleId:a,error:c.message},c)}},b.schedule.interval);this.scheduledJobs.set(a,d)}unscheduleMonitoringRule(a){let b=this.scheduledJobs.get(a);b&&(clearInterval(b),this.scheduledJobs.delete(a))}async evaluateCondition(a){switch(a.type){case"metric_threshold":return await this.evaluateMetricCondition(a);case"health_status":return await this.evaluateHealthCondition(a);case"log_pattern":return await this.evaluateLogCondition(a);case"custom":return await this.evaluateCustomCondition(a);default:return{met:!1,value:null,details:{error:"Unknown condition type"}}}}async evaluateMetricCondition(a){try{let b=new Date,c=new Date(b.getTime()-60*(a.windowMinutes||5)*1e3),d=(await g.z.queryMetrics({name:[a.metric],dateRange:{start:c,end:b},aggregation:a.aggregation||"avg"})).aggregatedValue||0,e=!1;switch(a.operator){case"gt":e=d>a.value;break;case"gte":e=d>=a.value;break;case"lt":e=d<a.value;break;case"lte":e=d<=a.value;break;case"eq":e=d===a.value}return{met:e,value:d,details:{metric:a.metric,operator:a.operator,threshold:a.value,aggregation:a.aggregation,windowMinutes:a.windowMinutes}}}catch(a){return{met:!1,value:null,details:{error:a.message}}}}async evaluateHealthCondition(a){try{let b=await f.WX.generateHealthReport(),c=b.overallStatus,d=!1;switch(a.operator){case"eq":d=c===a.value;break;case"contains":d=c.includes(a.value);break;case"not_contains":d=!c.includes(a.value)}return{met:d,value:c,details:{overallStatus:b.overallStatus,summary:b.summary}}}catch(a){return{met:!1,value:null,details:{error:a.message}}}}async evaluateLogCondition(a){try{let b=new Date,c=new Date(b.getTime()-60*(a.windowMinutes||5)*1e3),d=(await e.RE.queryLogs({search:a.metric,dateRange:{start:c,end:b},limit:1e3})).logs.length,f=!1;switch(a.operator){case"gt":f=d>a.value;break;case"gte":f=d>=a.value;break;case"lt":f=d<a.value;break;case"lte":f=d<=a.value;break;case"eq":f=d===a.value}return{met:f,value:d,details:{pattern:a.metric,matchCount:d,threshold:a.value,windowMinutes:a.windowMinutes}}}catch(a){return{met:!1,value:null,details:{error:a.message}}}}async evaluateCustomCondition(a){return{met:!1,value:null,details:{message:"Custom condition evaluation not implemented"}}}async executeMonitoringAction(a,b,c){switch(a.type){case"alert":let d=`Monitoring Alert: ${b.name}`,f=`Monitoring rule "${b.name}" triggered. Conditions: ${JSON.stringify(c.conditionResults)}`;"critical"===a.severity?await h.uo.sendCriticalAlert(d,f,a.alertType,{ruleId:b.id,...a.metadata}):await h.uo.sendWarningAlert(d,f,a.alertType,{ruleId:b.id,...a.metadata});break;case"recovery":a.recoveryActionId&&await i.H.executeRecoveryAction(a.recoveryActionId);break;case"log":await e.RE.logWarning("ProactiveMonitoringService",`Monitoring action triggered: ${b.name}`,{ruleId:b.id,executionDetails:c,actionMetadata:a.metadata});break;case"custom":a.customFunction&&await a.customFunction()}}registerDefaultMonitoringRules(){this.registerMonitoringRule({id:"high_error_rate",name:"High Error Rate Detection",description:"Monitors for sustained high error rates",category:"performance",enabled:!0,conditions:[{type:"log_pattern",metric:"error",operator:"gt",value:10,windowMinutes:5,aggregation:"count"}],actions:[{type:"alert",severity:"critical",alertType:"performance_degradation"}],schedule:{interval:6e4}}),this.registerMonitoringRule({id:"memory_usage_high",name:"High Memory Usage",description:"Monitors for high memory usage",category:"performance",enabled:!0,conditions:[{type:"metric_threshold",metric:"system_memory_usage",operator:"gt",value:512,windowMinutes:5,aggregation:"avg"}],actions:[{type:"alert",severity:"high",alertType:"resource_exhaustion"},{type:"recovery",recoveryActionId:"force_garbage_collection"}],schedule:{interval:12e4}}),this.registerMonitoringRule({id:"queue_backup",name:"Content Queue Backup",description:"Monitors for content queue backup",category:"business",enabled:!0,conditions:[{type:"metric_threshold",metric:"business_queue_size",operator:"gt",value:100,windowMinutes:10,aggregation:"avg"}],actions:[{type:"alert",severity:"medium",alertType:"queue_issue"},{type:"recovery",recoveryActionId:"clear_stuck_queue_items"}],schedule:{interval:3e5}})}registerAlertCorrelations(){this.alertCorrelations=[{pattern:"database_failures",description:"Multiple database-related failures",timeWindowMinutes:10,minimumOccurrences:3,alertTypes:["database_issue","api_failure"],action:"escalate"},{pattern:"memory_issues",description:"Memory-related performance issues",timeWindowMinutes:15,minimumOccurrences:2,alertTypes:["resource_exhaustion","performance_degradation"],action:"group"}]}startAlertCorrelation(){setInterval(async()=>{},6e4)}}let l=new k;d()}catch(a){d(a)}})},3295:a=>{a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:a=>{a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},11723:a=>{a.exports=require("querystring")},11997:a=>{a.exports=require("punycode")},12412:a=>{a.exports=require("assert")},21820:a=>{a.exports=require("os")},27910:a=>{a.exports=require("stream")},28354:a=>{a.exports=require("util")},29021:a=>{a.exports=require("fs")},29294:a=>{a.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:a=>{a.exports=require("path")},34631:a=>{a.exports=require("tls")},35443:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{h:()=>k});var e=c(99986),f=c(73790),g=c(34644),h=c(7462),i=a([e,f,g,h]);[e,f,g,h]=i.then?(await i)():i;class j{constructor(){this.diagnosticSuites=new Map,this.registerDefaultDiagnosticSuites()}registerDiagnosticSuite(a){this.diagnosticSuites.set(a.id,a),e.RE.logInfo("SystemDiagnosticsService",`Registered diagnostic suite: ${a.name}`,{suiteId:a.id,testCount:a.tests.length,enabled:a.enabled})}async runDiagnosticSuite(a){let b=this.diagnosticSuites.get(a);if(!b)throw Error(`Diagnostic suite not found: ${a}`);if(!b.enabled)throw Error(`Diagnostic suite is disabled: ${b.name}`);let c=new Date,d=[],f=[];for(let c of(await e.RE.logInfo("SystemDiagnosticsService",`Starting diagnostic suite: ${b.name}`,{suiteId:a,testCount:b.tests.length}),b.tests)){if(!c.enabled){d.push({name:c.name,status:"skipped",message:"Test is disabled",duration:0,timestamp:new Date});continue}try{let b=Date.now(),g=await c.run();g.duration=Date.now()-b,g.timestamp=new Date,d.push(g),g.recommendations&&f.push(...g.recommendations),await e.RE.logInfo("SystemDiagnosticsService",`Diagnostic test completed: ${c.name}`,{suiteId:a,testId:c.id,status:g.status,duration:g.duration,message:g.message})}catch(f){let b={name:c.name,status:"failed",message:`Test execution failed: ${f.message}`,duration:0,timestamp:new Date,details:{error:f.message}};d.push(b),await e.RE.logError("SystemDiagnosticsService",`Diagnostic test failed: ${c.name}`,{suiteId:a,testId:c.id,error:f.message},f)}}let h=new Date,i=h.getTime()-c.getTime(),j={total:d.length,passed:d.filter(a=>"passed"===a.status).length,warnings:d.filter(a=>"warning"===a.status).length,failed:d.filter(a=>"failed"===a.status).length,skipped:d.filter(a=>"skipped"===a.status).length},k="healthy";j.failed>0?k="critical":j.warnings>0&&(k="degraded");let l={suiteId:a,suiteName:b.name,startTime:c,endTime:h,duration:i,results:d,summary:j,overallStatus:k,recommendations:[...new Set(f)]};return await e.RE.logInfo("SystemDiagnosticsService",`Diagnostic suite completed: ${b.name}`,{suiteId:a,duration:i,overallStatus:k,summary:j}),"critical"===k&&await g.uo.sendCriticalAlert("Diagnostic Suite Critical Issues",`Diagnostic suite "${b.name}" found ${j.failed} critical issues`,"system_error",{suiteId:a,suiteName:b.name,summary:j,failedTests:d.filter(a=>"failed"===a.status).map(a=>a.name)}),l}async runAllDiagnostics(){let a=Array.from(this.diagnosticSuites.values()).filter(a=>a.enabled),b=[];for(let c of a)try{let a=await this.runDiagnosticSuite(c.id);b.push(a)}catch(a){await e.RE.logError("SystemDiagnosticsService",`Failed to run diagnostic suite: ${c.name}`,{suiteId:c.id,error:a.message},a)}return b}getDiagnosticSuites(){return Array.from(this.diagnosticSuites.values())}setDiagnosticSuiteEnabled(a,b){let c=this.diagnosticSuites.get(a);c&&(c.enabled=b,e.RE.logInfo("SystemDiagnosticsService",`Diagnostic suite ${b?"enabled":"disabled"}: ${c.name}`,{suiteId:a,enabled:b}))}setDiagnosticTestEnabled(a,b,c){let d=this.diagnosticSuites.get(a);if(d){let f=d.tests.find(a=>a.id===b);f&&(f.enabled=c,e.RE.logInfo("SystemDiagnosticsService",`Diagnostic test ${c?"enabled":"disabled"}: ${f.name}`,{suiteId:a,testId:b,enabled:c}))}}registerDefaultDiagnosticSuites(){this.registerDiagnosticSuite({id:"system_health",name:"System Health Check",description:"Basic system health and resource checks",enabled:!0,tests:[{id:"memory_usage",name:"Memory Usage Check",description:"Check system memory usage levels",category:"system",severity:"high",enabled:!0,run:async()=>{let a=process.memoryUsage(),b=Math.round(a.heapUsed/1024/1024),c=Math.round(a.heapTotal/1024/1024),d=b/c*100,e="passed",f=`Memory usage is normal (${b}MB / ${c}MB, ${Math.round(d)}%)`,g=[];return d>90?(e="failed",f=`Critical memory usage: ${Math.round(d)}%`,g.push("Consider restarting the application"),g.push("Investigate memory leaks")):d>80&&(e="warning",f=`High memory usage: ${Math.round(d)}%`,g.push("Monitor memory usage closely")),{name:"Memory Usage Check",status:e,message:f,details:{heapUsed:b,heapTotal:c,usagePercent:Math.round(d),rss:Math.round(a.rss/1024/1024),external:Math.round(a.external/1024/1024)},recommendations:g,duration:0,timestamp:new Date}}},{id:"uptime_check",name:"System Uptime Check",description:"Check system uptime and stability",category:"system",severity:"medium",enabled:!0,run:async()=>{let a=process.uptime(),b=a/3600,c="passed",d=`System uptime: ${Math.round(b)} hours`,e=[];return b<.1&&(c="warning",d=`System recently restarted (${Math.round(a)} seconds ago)`,e.push("Monitor for stability issues")),{name:"System Uptime Check",status:c,message:d,details:{uptimeSeconds:Math.round(a),uptimeHours:Math.round(100*b)/100},recommendations:e,duration:0,timestamp:new Date}}}]}),this.registerDiagnosticSuite({id:"database_health",name:"Database Health Check",description:"Database connectivity, performance, and integrity checks",enabled:!0,tests:[{id:"db_connectivity",name:"Database Connectivity",description:"Test database connection and basic queries",category:"database",severity:"critical",enabled:!0,run:async()=>{try{let a=Date.now();await h.db.query("SELECT 1 as test");let b=Date.now()-a,c="passed",d=`Database connected successfully (${b}ms)`,e=[];return b>1e3&&(c="warning",d=`Database connection slow (${b}ms)`,e.push("Investigate database performance")),{name:"Database Connectivity",status:c,message:d,details:{responseTime:b},recommendations:e,duration:0,timestamp:new Date}}catch(a){return{name:"Database Connectivity",status:"failed",message:`Database connection failed: ${a.message}`,details:{error:a.message},recommendations:["Check database server status","Verify connection credentials","Check network connectivity"],duration:0,timestamp:new Date}}}},{id:"db_pool_health",name:"Connection Pool Health",description:"Check database connection pool status",category:"database",severity:"high",enabled:!0,run:async()=>{try{let a=h.db.getPoolStats(),b=a.active/a.total*100,c="passed",d=`Connection pool healthy (${a.active}/${a.total} active, ${Math.round(b)}% utilization)`,e=[];return b>90?(c="failed",d=`Connection pool nearly exhausted (${Math.round(b)}% utilization)`,e.push("Increase connection pool size"),e.push("Investigate connection leaks")):b>80&&(c="warning",d=`High connection pool utilization (${Math.round(b)}%)`,e.push("Monitor connection usage")),{name:"Connection Pool Health",status:c,message:d,details:{...a,utilization:Math.round(b)},recommendations:e,duration:0,timestamp:new Date}}catch(a){return{name:"Connection Pool Health",status:"failed",message:`Failed to get pool stats: ${a.message}`,details:{error:a.message},recommendations:["Check database connection"],duration:0,timestamp:new Date}}}}]}),this.registerDiagnosticSuite({id:"performance_check",name:"Performance Analysis",description:"System performance and response time checks",enabled:!0,tests:[{id:"response_times",name:"API Response Times",description:"Check average API response times",category:"performance",severity:"medium",enabled:!0,run:async()=>{try{let a=await f.z.getPerformanceStats(),b=(a.avgAPIResponseTime+a.avgDatabaseQueryTime+a.avgContentProcessingTime)/3,c="passed",d=`Average response times are good (${Math.round(b)}ms average)`,e=[];return b>2e3?(c="failed",d=`Poor response times (${Math.round(b)}ms average)`,e.push("Investigate performance bottlenecks"),e.push("Consider scaling resources")):b>1e3&&(c="warning",d=`Slow response times (${Math.round(b)}ms average)`,e.push("Monitor performance trends")),{name:"API Response Times",status:c,message:d,details:a,recommendations:e,duration:0,timestamp:new Date}}catch(a){return{name:"API Response Times",status:"failed",message:`Failed to get performance stats: ${a.message}`,details:{error:a.message},recommendations:["Check metrics service"],duration:0,timestamp:new Date}}}}]})}}let k=new j;d()}catch(a){d(a)}})},36221:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{H:()=>l});var e=c(99986),f=c(34644),g=c(59794),h=c(73790),i=c(55229),j=a([e,f,g,h,i]);[e,f,g,h,i]=j.then?(await j)():j;class k{constructor(){this.recoveryActions=new Map,this.executionHistory=[],this.recoveryInProgress=new Set,this.gracefulDegradation={enabled:!0,fallbackModes:{databaseDown:{enabled:!0,useCache:!0,cacheTimeout:3e5},apiDown:{enabled:!0,skipNonCritical:!0,useBackupData:!0},highLoad:{enabled:!0,rateLimitRequests:!0,disableNonEssential:!0}}},this.registerDefaultRecoveryActions(),this.startRecoveryMonitoring()}registerRecoveryAction(a){this.recoveryActions.set(a.id,a),e.RE.logInfo("ErrorRecoveryService",`Registered recovery action: ${a.name}`,{actionId:a.id,priority:a.priority,enabled:a.enabled})}async executeRecoveryAction(a,b=!1){let c=this.recoveryActions.get(a);if(!c)throw Error(`Recovery action not found: ${a}`);if(!c.enabled&&!b)return await e.RE.logWarning("ErrorRecoveryService",`Recovery action disabled: ${c.name}`,{actionId:a,manual:b}),!1;if(this.recoveryInProgress.has(a))return await e.RE.logWarning("ErrorRecoveryService",`Recovery action already in progress: ${c.name}`,{actionId:a}),!1;let d={id:`exec_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,actionId:a,triggeredAt:new Date,success:!1,retryCount:0};this.recoveryInProgress.add(a);try{let g;await e.RE.logInfo("ErrorRecoveryService",`Starting recovery action: ${c.name}`,{actionId:a,executionId:d.id,manual:b});let i=Date.now(),j=!1;for(let b=0;b<=c.maxRetries;b++)try{if(d.retryCount=b,j=await c.action())break}catch(f){g=f,await e.RE.logWarning("ErrorRecoveryService",`Recovery action attempt ${b+1} failed: ${c.name}`,{actionId:a,executionId:d.id,attempt:b+1,maxRetries:c.maxRetries,error:f.message}),b<c.maxRetries&&await new Promise(a=>setTimeout(a,c.retryDelay))}d.success=j,d.completedAt=new Date,d.error=g?.message;let k=Date.now()-i;return await h.z.recordCustomMetric("recovery_action_duration",k,"ms",{action:c.name,success:j.toString(),retries:d.retryCount.toString()}),j?(await e.RE.logInfo("ErrorRecoveryService",`Recovery action completed successfully: ${c.name}`,{actionId:a,executionId:d.id,duration:k,retryCount:d.retryCount}),"critical"===c.priority&&await f.uo.sendWarningAlert("Recovery Action Successful",`Critical recovery action "${c.name}" completed successfully`,"system_error",{actionId:a,executionId:d.id,duration:k,retryCount:d.retryCount})):(await e.RE.logError("ErrorRecoveryService",`Recovery action failed: ${c.name}`,{actionId:a,executionId:d.id,duration:k,retryCount:d.retryCount,lastError:g?.message},g),await f.uo.sendCriticalAlert("Recovery Action Failed",`Recovery action "${c.name}" failed after ${d.retryCount} retries`,"system_error",{actionId:a,executionId:d.id,duration:k,retryCount:d.retryCount,error:g?.message})),this.executionHistory.push(d),this.executionHistory.length>100&&this.executionHistory.shift(),j}finally{this.recoveryInProgress.delete(a)}}async triggerGracefulDegradation(a){if(this.gracefulDegradation.enabled){switch(await e.RE.logWarning("ErrorRecoveryService",`Triggering graceful degradation: ${a}`,{scenario:a,config:this.gracefulDegradation.fallbackModes[a.replace("_","")]}),a){case"database_down":await this.handleDatabaseDown();break;case"api_down":await this.handleAPIDown();break;case"high_load":await this.handleHighLoad()}await f.uo.sendWarningAlert("Graceful Degradation Activated",`System has entered graceful degradation mode: ${a}`,"system_error",{scenario:a,timestamp:new Date().toISOString()})}}getRecoveryActionStatus(a){let b=this.recoveryActions.get(a),c=this.executionHistory.filter(b=>b.actionId===a).sort((a,b)=>b.triggeredAt.getTime()-a.triggeredAt.getTime())[0];return{exists:!!b,enabled:b?.enabled||!1,inProgress:this.recoveryInProgress.has(a),lastExecution:c}}getRecoveryStatistics(){let a=this.executionHistory.filter(a=>a.completedAt),b=a.filter(a=>a.success).length,c=a.reduce((a,b)=>a+(b.completedAt.getTime()-b.triggeredAt.getTime()),0);return{totalActions:this.recoveryActions.size,enabledActions:Array.from(this.recoveryActions.values()).filter(a=>a.enabled).length,totalExecutions:a.length,successfulExecutions:b,failedExecutions:a.length-b,averageExecutionTime:a.length>0?Math.round(c/a.length):0,actionsInProgress:this.recoveryInProgress.size}}setRecoveryActionEnabled(a,b){let c=this.recoveryActions.get(a);c&&(c.enabled=b,e.RE.logInfo("ErrorRecoveryService",`Recovery action ${b?"enabled":"disabled"}: ${c.name}`,{actionId:a,enabled:b}))}async testRecoveryAction(a){let b=this.recoveryActions.get(a);if(!b)throw Error(`Recovery action not found: ${a}`);await e.RE.logInfo("ErrorRecoveryService",`Testing recovery action: ${b.name}`,{actionId:a,testMode:!0});try{return"function"==typeof b.action}catch(c){return await e.RE.logError("ErrorRecoveryService",`Recovery action test failed: ${b.name}`,{actionId:a,error:c.message},c),!1}}registerDefaultRecoveryActions(){this.registerRecoveryAction({id:"restart_database_connection",name:"Restart Database Connection",description:"Attempts to restart database connection pool",trigger:{type:"health_check_failure",conditions:{component:"database",status:"critical"}},action:async()=>{try{await e.RE.logInfo("ErrorRecoveryService","Attempting database connection restart"),await new Promise(a=>setTimeout(a,2e3));let a=await g.WX.generateHealthReport();return"critical"!==a.checks.database.status}catch(a){return!1}},maxRetries:3,retryDelay:5e3,priority:"critical",enabled:!0}),this.registerRecoveryAction({id:"clear_stuck_queue_items",name:"Clear Stuck Queue Items",description:"Removes queue items that have been processing too long",trigger:{type:"health_check_failure",conditions:{component:"contentQueue",status:"warning"}},action:async()=>{try{let a=new Date(Date.now()-18e5),b=await (0,i.P)("content_queue").where("status","processing").where("updated_at","<",a).update({status:"pending",updated_at:new Date});return await e.RE.logInfo("ErrorRecoveryService",`Cleared ${b} stuck queue items`),!0}catch(a){return!1}},maxRetries:2,retryDelay:3e3,priority:"medium",enabled:!0}),this.registerRecoveryAction({id:"force_garbage_collection",name:"Force Garbage Collection",description:"Forces Node.js garbage collection to free memory",trigger:{type:"alert_threshold",conditions:{metric:"memory_usage",threshold:80}},action:async()=>{try{if(global.gc)return global.gc(),await e.RE.logInfo("ErrorRecoveryService","Forced garbage collection"),!0;return await e.RE.logWarning("ErrorRecoveryService","Garbage collection not available"),!1}catch(a){return!1}},maxRetries:1,retryDelay:1e3,priority:"medium",enabled:!0}),this.registerRecoveryAction({id:"restart_scanning_services",name:"Restart Scanning Services",description:"Restarts social media scanning services",trigger:{type:"health_check_failure",conditions:{component:"scheduler",status:"critical"}},action:async()=>{try{return await e.RE.logInfo("ErrorRecoveryService","Restarting scanning services"),await new Promise(a=>setTimeout(a,3e3)),!0}catch(a){return!1}},maxRetries:2,retryDelay:1e4,priority:"high",enabled:!0})}async handleDatabaseDown(){let a=this.gracefulDegradation.fallbackModes.databaseDown;a.enabled&&a.useCache&&await e.RE.logInfo("ErrorRecoveryService","Switching to cache-only mode for database operations")}async handleAPIDown(){let a=this.gracefulDegradation.fallbackModes.apiDown;a.enabled&&(a.skipNonCritical&&await e.RE.logInfo("ErrorRecoveryService","Skipping non-critical API calls"),a.useBackupData&&await e.RE.logInfo("ErrorRecoveryService","Using backup/cached data for API responses"))}async handleHighLoad(){let a=this.gracefulDegradation.fallbackModes.highLoad;a.enabled&&(a.rateLimitRequests&&await e.RE.logInfo("ErrorRecoveryService","Activating request rate limiting"),a.disableNonEssential&&await e.RE.logInfo("ErrorRecoveryService","Disabling non-essential features"))}startRecoveryMonitoring(){setInterval(async()=>{try{let a=await g.WX.generateHealthReport();"critical"===a.checks.database.status&&await this.executeRecoveryAction("restart_database_connection"),"warning"===a.checks.services.contentQueue.status&&await this.executeRecoveryAction("clear_stuck_queue_items"),"critical"===a.checks.system.memory.status&&await this.executeRecoveryAction("force_garbage_collection"),"critical"===a.checks.services.scheduler.status&&await this.executeRecoveryAction("restart_scanning_services")}catch(a){await e.RE.logError("ErrorRecoveryService","Error in recovery monitoring",{error:a.message},a)}},6e4)}}let l=new k;d()}catch(a){d(a)}})},37366:a=>{a.exports=require("dns")},37582:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{handler:()=>x,patchFetch:()=>w,routeModule:()=>y,serverHooks:()=>B,workAsyncStorage:()=>z,workUnitAsyncStorage:()=>A});var e=c(96559),f=c(48088),g=c(37719),h=c(26191),i=c(81289),j=c(261),k=c(92603),l=c(39893),m=c(14823),n=c(47220),o=c(66946),p=c(47912),q=c(99786),r=c(46143),s=c(86439),t=c(43365),u=c(87646),v=a([u]);u=(v.then?(await v)():v)[0];let y=new e.AppRouteRouteModule({definition:{kind:f.RouteKind.APP_ROUTE,page:"/api/admin/monitoring/init/route",pathname:"/api/admin/monitoring/init",filename:"route",bundlePath:"app/api/admin/monitoring/init/route"},distDir:".next",projectDir:"",resolvedPagePath:"/Users/adamshaw/Development/websites/hotdog-diaries/app/api/admin/monitoring/init/route.ts",nextConfigOutput:"",userland:u}),{workAsyncStorage:z,workUnitAsyncStorage:A,serverHooks:B}=y;function w(){return(0,g.patchFetch)({workAsyncStorage:z,workUnitAsyncStorage:A})}async function x(a,b,c){var d;let e="/api/admin/monitoring/init/route";"/index"===e&&(e="/");let g=await y.prepare(a,b,{srcPage:e,multiZoneDraftMode:"false"});if(!g)return b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve()),null;let{buildId:u,params:v,nextConfig:w,isDraftMode:x,prerenderManifest:z,routerServerContext:A,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,resolvedPathname:D}=g,E=(0,j.normalizeAppPath)(e),F=!!(z.dynamicRoutes[E]||z.routes[D]);if(F&&!x){let a=!!z.routes[D],b=z.dynamicRoutes[E];if(b&&!1===b.fallback&&!a)throw new s.NoFallbackError}let G=null;!F||y.isDev||x||(G=D,G="/index"===G?"/":G);let H=!0===y.isDev||!F,I=F&&!H,J=a.method||"GET",K=(0,i.getTracer)(),L=K.getActiveScopeSpan(),M={params:v,prerenderManifest:z,renderOpts:{experimental:{dynamicIO:!!w.experimental.dynamicIO,authInterrupts:!!w.experimental.authInterrupts},supportsDynamicResponse:H,incrementalCache:(0,h.getRequestMeta)(a,"incrementalCache"),cacheLifeProfiles:null==(d=w.experimental)?void 0:d.cacheLife,isRevalidate:I,waitUntil:c.waitUntil,onClose:a=>{b.on("close",a)},onAfterTaskError:void 0,onInstrumentationRequestError:(b,c,d)=>y.onRequestError(a,b,d,A)},sharedContext:{buildId:u}},N=new k.NodeNextRequest(a),O=new k.NodeNextResponse(b),P=l.NextRequestAdapter.fromNodeNextRequest(N,(0,l.signalFromNodeResponse)(b));try{let d=async c=>y.handle(P,M).finally(()=>{if(!c)return;c.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let d=K.getRootSpanAttributes();if(!d)return;if(d.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${d.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let e=d.get("next.route");if(e){let a=`${J} ${e}`;c.setAttributes({"next.route":e,"http.route":e,"next.span_name":a}),c.updateName(a)}else c.updateName(`${J} ${a.url}`)}),g=async g=>{var i,j;let k=async({previousCacheEntry:f})=>{try{if(!(0,h.getRequestMeta)(a,"minimalMode")&&B&&C&&!f)return b.statusCode=404,b.setHeader("x-nextjs-cache","REVALIDATED"),b.end("This page could not be found"),null;let e=await d(g);a.fetchMetrics=M.renderOpts.fetchMetrics;let i=M.renderOpts.pendingWaitUntil;i&&c.waitUntil&&(c.waitUntil(i),i=void 0);let j=M.renderOpts.collectedTags;if(!F)return await (0,o.I)(N,O,e,M.renderOpts.pendingWaitUntil),null;{let a=await e.blob(),b=(0,p.toNodeOutgoingHttpHeaders)(e.headers);j&&(b[r.NEXT_CACHE_TAGS_HEADER]=j),!b["content-type"]&&a.type&&(b["content-type"]=a.type);let c=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=r.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,d=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=r.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:t.CachedRouteKind.APP_ROUTE,status:e.status,body:Buffer.from(await a.arrayBuffer()),headers:b},cacheControl:{revalidate:c,expire:d}}}}catch(b){throw(null==f?void 0:f.isStale)&&await y.onRequestError(a,b,{routerKind:"App Router",routePath:e,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})},A),b}},l=await y.handleResponse({req:a,nextConfig:w,cacheKey:G,routeKind:f.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:z,isRoutePPREnabled:!1,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,responseGenerator:k,waitUntil:c.waitUntil});if(!F)return null;if((null==l||null==(i=l.value)?void 0:i.kind)!==t.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==l||null==(j=l.value)?void 0:j.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,h.getRequestMeta)(a,"minimalMode")||b.setHeader("x-nextjs-cache",B?"REVALIDATED":l.isMiss?"MISS":l.isStale?"STALE":"HIT"),x&&b.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let m=(0,p.fromNodeOutgoingHttpHeaders)(l.value.headers);return(0,h.getRequestMeta)(a,"minimalMode")&&F||m.delete(r.NEXT_CACHE_TAGS_HEADER),!l.cacheControl||b.getHeader("Cache-Control")||m.get("Cache-Control")||m.set("Cache-Control",(0,q.getCacheControlHeader)(l.cacheControl)),await (0,o.I)(N,O,new Response(l.value.body,{headers:m,status:l.value.status||200})),null};L?await g(L):await K.withPropagatedContext(a.headers,()=>K.trace(m.BaseServerSpan.handleRequest,{spanName:`${J} ${a.url}`,kind:i.SpanKind.SERVER,attributes:{"http.method":J,"http.target":a.url}},g))}catch(b){if(L||await y.onRequestError(a,b,{routerKind:"App Router",routePath:E,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})}),F)throw b;return await (0,o.I)(N,O,new Response(null,{status:500})),null}}d()}catch(a){d(a)}})},44870:a=>{a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:a=>{a.exports=require("crypto")},55591:a=>{a.exports=require("https")},63033:a=>{a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},63688:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{b:()=>m});var e=c(99986),f=c(59794),g=c(73790),h=c(34644),i=c(35443),j=c(2369),k=a([e,f,g,h,i,j]);[e,f,g,h,i,j]=k.then?(await k)():k;class l{async initialize(){if(this.initialized)return void await e.RE.logWarning("MonitoringInit","Monitoring services already initialized");try{await e.RE.logInfo("MonitoringInit","Starting monitoring services initialization"),await h.uo.testAlertSystem(),await j.X.start(),this.registerShutdownHandlers(),await g.z.recordCustomMetric("monitoring_initialization",1,"count",{status:"success"}),this.initialized=!0,await e.RE.logInfo("MonitoringInit","All monitoring services initialized successfully",{services:["LoggingService","HealthService","MetricsService","AlertService","ErrorRecoveryService","SystemDiagnosticsService","ProactiveMonitoringService"]}),await h.uo.sendWarningAlert("Monitoring System Started","All monitoring services have been initialized and are operational","system_error",{timestamp:new Date().toISOString(),environment:"production"})}catch(a){throw await e.RE.logError("MonitoringInit","Failed to initialize monitoring services",{error:a.message},a),await g.z.recordCustomMetric("monitoring_initialization",1,"count",{status:"failed",error:a.message}),a}}async shutdown(){if(this.initialized){await e.RE.logInfo("MonitoringInit","Shutting down monitoring services");try{await j.X.stop(),await Promise.allSettled(this.shutdownHandlers.map(a=>a())),await Promise.allSettled([e.RE.shutdown(),g.z.shutdown()]),this.initialized=!1,console.log("[MonitoringInit] All monitoring services shut down successfully")}catch(a){console.error("[MonitoringInit] Error during shutdown:",a)}}}async getMonitoringStatus(){let a=f.WX.getUptime();return{initialized:this.initialized,services:{logging:!0,health:!0,metrics:!0,alerts:!0,recovery:!0,diagnostics:!0,proactiveMonitoring:this.initialized},uptime:a}}async runHealthCheck(){try{let a,b=await f.WX.generateHealthReport();return"healthy"!==b.overallStatus&&(a=await i.h.runDiagnosticSuite("system_health")),{healthy:"healthy"===b.overallStatus||"warning"===b.overallStatus,report:b,diagnostics:a}}catch(a){return await e.RE.logError("MonitoringInit","Health check failed",{error:a.message},a),{healthy:!1,report:null,diagnostics:null}}}registerShutdownHandlers(){this.shutdownHandlers.push(()=>e.RE.shutdown(),()=>g.z.shutdown());let a=async a=>{console.log(`[MonitoringInit] Received ${a}, shutting down gracefully...`),await this.shutdown(),process.exit(0)};process.on("SIGTERM",()=>a("SIGTERM")),process.on("SIGINT",()=>a("SIGINT")),process.on("uncaughtException",async a=>{await e.RE.logError("MonitoringInit","Uncaught exception",{error:a.message,stack:a.stack},a),await h.uo.sendCriticalAlert("Uncaught Exception",`Application encountered uncaught exception: ${a.message}`,"system_error",{error:a.message,stack:a.stack,timestamp:new Date().toISOString()}),setTimeout(()=>{process.exit(1)},2e3)}),process.on("unhandledRejection",async(a,b)=>{let c=a instanceof Error?a:Error(String(a));await e.RE.logError("MonitoringInit","Unhandled promise rejection",{reason:String(a),error:c.message},c),await h.uo.sendCriticalAlert("Unhandled Promise Rejection",`Application encountered unhandled promise rejection: ${String(a)}`,"system_error",{reason:String(a),timestamp:new Date().toISOString()})})}isInitialized(){return this.initialized}constructor(){this.initialized=!1,this.shutdownHandlers=[]}}let m=new l;setTimeout(async()=>{try{await m.initialize()}catch(a){console.error("[MonitoringInit] Auto-initialization failed:",a)}},5e3),d()}catch(a){d(a)}})},64939:a=>{a.exports=import("pg")},74075:a=>{a.exports=require("zlib")},79428:a=>{a.exports=require("buffer")},79551:a=>{a.exports=require("url")},79646:a=>{a.exports=require("child_process")},81630:a=>{a.exports=require("http")},83237:a=>{a.exports=import("playwright")},84297:a=>{a.exports=require("async_hooks")},86439:a=>{a.exports=require("next/dist/shared/lib/no-fallback-error.external")},87646:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{GET:()=>i,POST:()=>j});var e=c(32190),f=c(63688),g=c(46024),h=a([f,g]);[f,g]=h.then?(await h)():h;let i=g.r_.withErrorHandling(async a=>{let b=await f.b.getMonitoringStatus();return e.NextResponse.json(b,{headers:{"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"}})}),j=g.r_.withErrorHandling(async a=>{let{action:b}=await a.json();switch(b){case"initialize":if(f.b.isInitialized())return e.NextResponse.json({error:"Monitoring services are already initialized"},{status:409});return await f.b.initialize(),e.NextResponse.json({success:!0,message:"Monitoring services initialized successfully"});case"shutdown":return await f.b.shutdown(),e.NextResponse.json({success:!0,message:"Monitoring services shut down successfully"});case"health_check":let c=await f.b.runHealthCheck();return e.NextResponse.json(c);case"status":let d=await f.b.getMonitoringStatus();return e.NextResponse.json(d);default:return e.NextResponse.json({error:"Invalid action. Supported actions: initialize, shutdown, health_check, status"},{status:400})}});d()}catch(a){d(a)}})},91645:a=>{a.exports=require("net")},94735:a=>{a.exports=require("events")}};var b=require("../../../../../webpack-runtime.js");b.C(a);var c=b.X(0,[4985,5266,1977,4097,4165,2535,3790,6865,9159,6901,467,8051,4749,303,4991,6452,4644],()=>b(b.s=37582));module.exports=c})();