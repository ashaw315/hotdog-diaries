"use strict";(()=>{var a={};a.id=8258,a.ids=[8258],a.modules={261:a=>{a.exports=require("next/dist/shared/lib/router/utils/app-paths")},3295:a=>{a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:a=>{a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},11723:a=>{a.exports=require("querystring")},11997:a=>{a.exports=require("punycode")},12412:a=>{a.exports=require("assert")},21820:a=>{a.exports=require("os")},27910:a=>{a.exports=require("stream")},28354:a=>{a.exports=require("util")},29021:a=>{a.exports=require("fs")},29294:a=>{a.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:a=>{a.exports=require("path")},34631:a=>{a.exports=require("tls")},36221:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{H:()=>l});var e=c(99986),f=c(34644),g=c(59794),h=c(73790),i=c(55229),j=a([e,f,g,h,i]);[e,f,g,h,i]=j.then?(await j)():j;class k{constructor(){this.recoveryActions=new Map,this.executionHistory=[],this.recoveryInProgress=new Set,this.gracefulDegradation={enabled:!0,fallbackModes:{databaseDown:{enabled:!0,useCache:!0,cacheTimeout:3e5},apiDown:{enabled:!0,skipNonCritical:!0,useBackupData:!0},highLoad:{enabled:!0,rateLimitRequests:!0,disableNonEssential:!0}}},this.registerDefaultRecoveryActions(),this.startRecoveryMonitoring()}registerRecoveryAction(a){this.recoveryActions.set(a.id,a),e.RE.logInfo("ErrorRecoveryService",`Registered recovery action: ${a.name}`,{actionId:a.id,priority:a.priority,enabled:a.enabled})}async executeRecoveryAction(a,b=!1){let c=this.recoveryActions.get(a);if(!c)throw Error(`Recovery action not found: ${a}`);if(!c.enabled&&!b)return await e.RE.logWarning("ErrorRecoveryService",`Recovery action disabled: ${c.name}`,{actionId:a,manual:b}),!1;if(this.recoveryInProgress.has(a))return await e.RE.logWarning("ErrorRecoveryService",`Recovery action already in progress: ${c.name}`,{actionId:a}),!1;let d={id:`exec_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,actionId:a,triggeredAt:new Date,success:!1,retryCount:0};this.recoveryInProgress.add(a);try{let g;await e.RE.logInfo("ErrorRecoveryService",`Starting recovery action: ${c.name}`,{actionId:a,executionId:d.id,manual:b});let i=Date.now(),j=!1;for(let b=0;b<=c.maxRetries;b++)try{if(d.retryCount=b,j=await c.action())break}catch(f){g=f,await e.RE.logWarning("ErrorRecoveryService",`Recovery action attempt ${b+1} failed: ${c.name}`,{actionId:a,executionId:d.id,attempt:b+1,maxRetries:c.maxRetries,error:f.message}),b<c.maxRetries&&await new Promise(a=>setTimeout(a,c.retryDelay))}d.success=j,d.completedAt=new Date,d.error=g?.message;let k=Date.now()-i;return await h.z.recordCustomMetric("recovery_action_duration",k,"ms",{action:c.name,success:j.toString(),retries:d.retryCount.toString()}),j?(await e.RE.logInfo("ErrorRecoveryService",`Recovery action completed successfully: ${c.name}`,{actionId:a,executionId:d.id,duration:k,retryCount:d.retryCount}),"critical"===c.priority&&await f.uo.sendWarningAlert("Recovery Action Successful",`Critical recovery action "${c.name}" completed successfully`,"system_error",{actionId:a,executionId:d.id,duration:k,retryCount:d.retryCount})):(await e.RE.logError("ErrorRecoveryService",`Recovery action failed: ${c.name}`,{actionId:a,executionId:d.id,duration:k,retryCount:d.retryCount,lastError:g?.message},g),await f.uo.sendCriticalAlert("Recovery Action Failed",`Recovery action "${c.name}" failed after ${d.retryCount} retries`,"system_error",{actionId:a,executionId:d.id,duration:k,retryCount:d.retryCount,error:g?.message})),this.executionHistory.push(d),this.executionHistory.length>100&&this.executionHistory.shift(),j}finally{this.recoveryInProgress.delete(a)}}async triggerGracefulDegradation(a){if(this.gracefulDegradation.enabled){switch(await e.RE.logWarning("ErrorRecoveryService",`Triggering graceful degradation: ${a}`,{scenario:a,config:this.gracefulDegradation.fallbackModes[a.replace("_","")]}),a){case"database_down":await this.handleDatabaseDown();break;case"api_down":await this.handleAPIDown();break;case"high_load":await this.handleHighLoad()}await f.uo.sendWarningAlert("Graceful Degradation Activated",`System has entered graceful degradation mode: ${a}`,"system_error",{scenario:a,timestamp:new Date().toISOString()})}}getRecoveryActionStatus(a){let b=this.recoveryActions.get(a),c=this.executionHistory.filter(b=>b.actionId===a).sort((a,b)=>b.triggeredAt.getTime()-a.triggeredAt.getTime())[0];return{exists:!!b,enabled:b?.enabled||!1,inProgress:this.recoveryInProgress.has(a),lastExecution:c}}getRecoveryStatistics(){let a=this.executionHistory.filter(a=>a.completedAt),b=a.filter(a=>a.success).length,c=a.reduce((a,b)=>a+(b.completedAt.getTime()-b.triggeredAt.getTime()),0);return{totalActions:this.recoveryActions.size,enabledActions:Array.from(this.recoveryActions.values()).filter(a=>a.enabled).length,totalExecutions:a.length,successfulExecutions:b,failedExecutions:a.length-b,averageExecutionTime:a.length>0?Math.round(c/a.length):0,actionsInProgress:this.recoveryInProgress.size}}setRecoveryActionEnabled(a,b){let c=this.recoveryActions.get(a);c&&(c.enabled=b,e.RE.logInfo("ErrorRecoveryService",`Recovery action ${b?"enabled":"disabled"}: ${c.name}`,{actionId:a,enabled:b}))}async testRecoveryAction(a){let b=this.recoveryActions.get(a);if(!b)throw Error(`Recovery action not found: ${a}`);await e.RE.logInfo("ErrorRecoveryService",`Testing recovery action: ${b.name}`,{actionId:a,testMode:!0});try{return"function"==typeof b.action}catch(c){return await e.RE.logError("ErrorRecoveryService",`Recovery action test failed: ${b.name}`,{actionId:a,error:c.message},c),!1}}registerDefaultRecoveryActions(){this.registerRecoveryAction({id:"restart_database_connection",name:"Restart Database Connection",description:"Attempts to restart database connection pool",trigger:{type:"health_check_failure",conditions:{component:"database",status:"critical"}},action:async()=>{try{await e.RE.logInfo("ErrorRecoveryService","Attempting database connection restart"),await new Promise(a=>setTimeout(a,2e3));let a=await g.WX.generateHealthReport();return"critical"!==a.checks.database.status}catch(a){return!1}},maxRetries:3,retryDelay:5e3,priority:"critical",enabled:!0}),this.registerRecoveryAction({id:"clear_stuck_queue_items",name:"Clear Stuck Queue Items",description:"Removes queue items that have been processing too long",trigger:{type:"health_check_failure",conditions:{component:"contentQueue",status:"warning"}},action:async()=>{try{let a=new Date(Date.now()-18e5),b=await (0,i.P)("content_queue").where("status","processing").where("updated_at","<",a).update({status:"pending",updated_at:new Date});return await e.RE.logInfo("ErrorRecoveryService",`Cleared ${b} stuck queue items`),!0}catch(a){return!1}},maxRetries:2,retryDelay:3e3,priority:"medium",enabled:!0}),this.registerRecoveryAction({id:"force_garbage_collection",name:"Force Garbage Collection",description:"Forces Node.js garbage collection to free memory",trigger:{type:"alert_threshold",conditions:{metric:"memory_usage",threshold:80}},action:async()=>{try{if(global.gc)return global.gc(),await e.RE.logInfo("ErrorRecoveryService","Forced garbage collection"),!0;return await e.RE.logWarning("ErrorRecoveryService","Garbage collection not available"),!1}catch(a){return!1}},maxRetries:1,retryDelay:1e3,priority:"medium",enabled:!0}),this.registerRecoveryAction({id:"restart_scanning_services",name:"Restart Scanning Services",description:"Restarts social media scanning services",trigger:{type:"health_check_failure",conditions:{component:"scheduler",status:"critical"}},action:async()=>{try{return await e.RE.logInfo("ErrorRecoveryService","Restarting scanning services"),await new Promise(a=>setTimeout(a,3e3)),!0}catch(a){return!1}},maxRetries:2,retryDelay:1e4,priority:"high",enabled:!0})}async handleDatabaseDown(){let a=this.gracefulDegradation.fallbackModes.databaseDown;a.enabled&&a.useCache&&await e.RE.logInfo("ErrorRecoveryService","Switching to cache-only mode for database operations")}async handleAPIDown(){let a=this.gracefulDegradation.fallbackModes.apiDown;a.enabled&&(a.skipNonCritical&&await e.RE.logInfo("ErrorRecoveryService","Skipping non-critical API calls"),a.useBackupData&&await e.RE.logInfo("ErrorRecoveryService","Using backup/cached data for API responses"))}async handleHighLoad(){let a=this.gracefulDegradation.fallbackModes.highLoad;a.enabled&&(a.rateLimitRequests&&await e.RE.logInfo("ErrorRecoveryService","Activating request rate limiting"),a.disableNonEssential&&await e.RE.logInfo("ErrorRecoveryService","Disabling non-essential features"))}startRecoveryMonitoring(){setInterval(async()=>{try{let a=await g.WX.generateHealthReport();"critical"===a.checks.database.status&&await this.executeRecoveryAction("restart_database_connection"),"warning"===a.checks.services.contentQueue.status&&await this.executeRecoveryAction("clear_stuck_queue_items"),"critical"===a.checks.system.memory.status&&await this.executeRecoveryAction("force_garbage_collection"),"critical"===a.checks.services.scheduler.status&&await this.executeRecoveryAction("restart_scanning_services")}catch(a){await e.RE.logError("ErrorRecoveryService","Error in recovery monitoring",{error:a.message},a)}},6e4)}}let l=new k;d()}catch(a){d(a)}})},37366:a=>{a.exports=require("dns")},44870:a=>{a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},47127:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{GET:()=>q,POST:()=>r});var e=c(32190),f=c(59794),g=c(73790),h=c(99986),i=c(36221),j=c(46024),k=c(7462),l=a([f,g,h,i,j,k]);[f,g,h,i,j,k]=l.then?(await l)():l;let q=j.r_.withErrorHandling(async a=>{let{searchParams:b}=new URL(a.url);switch(b.get("type")){case"system":return e.NextResponse.json(await m());case"database":return e.NextResponse.json(await n());case"performance":return e.NextResponse.json(await o());case"connectivity":return e.NextResponse.json(await p());case"full":let[c,d,f,g]=await Promise.allSettled([m(),n(),o(),p()]);return e.NextResponse.json({system:"fulfilled"===c.status?c.value:{error:c.reason},database:"fulfilled"===d.status?d.value:{error:d.reason},performance:"fulfilled"===f.status?f.value:{error:f.reason},connectivity:"fulfilled"===g.status?g.value:{error:g.reason},timestamp:new Date().toISOString()});default:return e.NextResponse.json({error:"Invalid diagnostic type. Supported: system, database, performance, connectivity, full"},{status:400})}}),r=j.r_.withErrorHandling(async a=>{let b=await a.json(),{action:c}=b;switch(c){case"run_diagnostics":let d=b.type||"full",g=new URL(a.url);return g.searchParams.set("type",d),e.NextResponse.redirect(g);case"health_check":let i=await f.WX.generateHealthReport(),j="healthy"===i.overallStatus;return e.NextResponse.json({healthy:j,status:i.overallStatus,summary:i.summary,timestamp:i.timestamp});case"clear_caches":return await h.RE.logInfo("DiagnosticsAPI","Cache clearing requested"),e.NextResponse.json({success:!0,message:"Cache clearing initiated"});case"restart_services":return await h.RE.logInfo("DiagnosticsAPI","Service restart requested"),e.NextResponse.json({success:!0,message:"Service restart initiated"});default:return e.NextResponse.json({error:"Invalid action. Supported actions: run_diagnostics, health_check, clear_caches, restart_services"},{status:400})}});async function m(){let a=process.memoryUsage(),b=process.cpuUsage(),c=process.uptime(),d=process.version,e=process.platform,f=process.arch,g={nodeEnv:"production",hasDatabase:!!process.env.DATABASE_URL,hasSmtp:!!process.env.SMTP_HOST,hasAdminEmail:!!process.env.ADMIN_EMAIL};return{memory:{rss:Math.round(a.rss/1024/1024),heapTotal:Math.round(a.heapTotal/1024/1024),heapUsed:Math.round(a.heapUsed/1024/1024),external:Math.round(a.external/1024/1024),arrayBuffers:Math.round(a.arrayBuffers/1024/1024)},cpu:{user:Math.round(b.user/1e3),system:Math.round(b.system/1e3)},process:{uptime:Math.round(c),pid:process.pid,nodeVersion:d,platform:e,arch:f},environment:g,timestamp:new Date().toISOString()}}async function n(){try{let a=Date.now();await k.db.query("SELECT 1 as test");let b=Date.now()-a,c=await k.db.query("SELECT version()"),d=c.rows[0]?.version||"Unknown",e=k.db.getPoolStats(),f=await k.db.query(`
      SELECT 
        schemaname,
        tablename,
        n_tup_ins as inserts,
        n_tup_upd as updates,
        n_tup_del as deletes,
        n_live_tup as live_rows,
        n_dead_tup as dead_rows
      FROM pg_stat_user_tables 
      ORDER BY n_live_tup DESC
      LIMIT 10
    `),g=await k.db.query(`
      SELECT 
        pid,
        now() - pg_stat_activity.query_start AS duration,
        query,
        state
      FROM pg_stat_activity 
      WHERE (now() - pg_stat_activity.query_start) > interval '5 minutes'
      AND state = 'active'
    `);return{connectivity:{status:"connected",responseTime:b},version:d,connectionPool:e,tableStatistics:f.rows,longRunningQueries:g.rows,timestamp:new Date().toISOString()}}catch(a){return{connectivity:{status:"error",error:a.message},timestamp:new Date().toISOString()}}}async function o(){try{let a=await g.z.getPerformanceStats(),b=await g.z.getMetricsSummary(),c=i.H.getRecoveryStatistics(),d=new Date,e=new Date(d.getTime()-864e5),f=await h.RE.getLogStatistics({start:e,end:d});return{realtimePerformance:a,businessKPIs:b.businessKPIs,systemResources:b.systemResources,apiResponseTimes:b.recentAPIResponseTimes,slowOperations:b.topSlowOperations,errorRecovery:c,logStatistics:{totalLogs:f.totalLogs,errorCount:f.errorCount,warningCount:f.warningCount,topComponents:f.topComponents.slice(0,5)},timestamp:new Date().toISOString()}}catch(a){return{error:a.message,timestamp:new Date().toISOString()}}}async function p(){try{let a=await f.WX.generateHealthReport(),b={reddit:a.checks.apis.reddit,instagram:a.checks.apis.instagram,tiktok:a.checks.apis.tiktok},c=a.checks.database;return{apis:b,database:{status:c.status,responseTime:c.responseTime,connectionPool:c.connectionPool},dns:{google:{status:"unknown",message:"DNS test not implemented"},cloudflare:{status:"unknown",message:"DNS test not implemented"}},timestamp:new Date().toISOString()}}catch(a){return{error:a.message,timestamp:new Date().toISOString()}}}d()}catch(a){d(a)}})},55511:a=>{a.exports=require("crypto")},55591:a=>{a.exports=require("https")},62696:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{handler:()=>x,patchFetch:()=>w,routeModule:()=>y,serverHooks:()=>B,workAsyncStorage:()=>z,workUnitAsyncStorage:()=>A});var e=c(96559),f=c(48088),g=c(37719),h=c(26191),i=c(81289),j=c(261),k=c(92603),l=c(39893),m=c(14823),n=c(47220),o=c(66946),p=c(47912),q=c(99786),r=c(46143),s=c(86439),t=c(43365),u=c(47127),v=a([u]);u=(v.then?(await v)():v)[0];let y=new e.AppRouteRouteModule({definition:{kind:f.RouteKind.APP_ROUTE,page:"/api/admin/diagnostics/route",pathname:"/api/admin/diagnostics",filename:"route",bundlePath:"app/api/admin/diagnostics/route"},distDir:".next",projectDir:"",resolvedPagePath:"/Users/adamshaw/Development/websites/hotdog-diaries/app/api/admin/diagnostics/route.ts",nextConfigOutput:"",userland:u}),{workAsyncStorage:z,workUnitAsyncStorage:A,serverHooks:B}=y;function w(){return(0,g.patchFetch)({workAsyncStorage:z,workUnitAsyncStorage:A})}async function x(a,b,c){var d;let e="/api/admin/diagnostics/route";"/index"===e&&(e="/");let g=await y.prepare(a,b,{srcPage:e,multiZoneDraftMode:"false"});if(!g)return b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve()),null;let{buildId:u,params:v,nextConfig:w,isDraftMode:x,prerenderManifest:z,routerServerContext:A,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,resolvedPathname:D}=g,E=(0,j.normalizeAppPath)(e),F=!!(z.dynamicRoutes[E]||z.routes[D]);if(F&&!x){let a=!!z.routes[D],b=z.dynamicRoutes[E];if(b&&!1===b.fallback&&!a)throw new s.NoFallbackError}let G=null;!F||y.isDev||x||(G=D,G="/index"===G?"/":G);let H=!0===y.isDev||!F,I=F&&!H,J=a.method||"GET",K=(0,i.getTracer)(),L=K.getActiveScopeSpan(),M={params:v,prerenderManifest:z,renderOpts:{experimental:{dynamicIO:!!w.experimental.dynamicIO,authInterrupts:!!w.experimental.authInterrupts},supportsDynamicResponse:H,incrementalCache:(0,h.getRequestMeta)(a,"incrementalCache"),cacheLifeProfiles:null==(d=w.experimental)?void 0:d.cacheLife,isRevalidate:I,waitUntil:c.waitUntil,onClose:a=>{b.on("close",a)},onAfterTaskError:void 0,onInstrumentationRequestError:(b,c,d)=>y.onRequestError(a,b,d,A)},sharedContext:{buildId:u}},N=new k.NodeNextRequest(a),O=new k.NodeNextResponse(b),P=l.NextRequestAdapter.fromNodeNextRequest(N,(0,l.signalFromNodeResponse)(b));try{let d=async c=>y.handle(P,M).finally(()=>{if(!c)return;c.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let d=K.getRootSpanAttributes();if(!d)return;if(d.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${d.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let e=d.get("next.route");if(e){let a=`${J} ${e}`;c.setAttributes({"next.route":e,"http.route":e,"next.span_name":a}),c.updateName(a)}else c.updateName(`${J} ${a.url}`)}),g=async g=>{var i,j;let k=async({previousCacheEntry:f})=>{try{if(!(0,h.getRequestMeta)(a,"minimalMode")&&B&&C&&!f)return b.statusCode=404,b.setHeader("x-nextjs-cache","REVALIDATED"),b.end("This page could not be found"),null;let e=await d(g);a.fetchMetrics=M.renderOpts.fetchMetrics;let i=M.renderOpts.pendingWaitUntil;i&&c.waitUntil&&(c.waitUntil(i),i=void 0);let j=M.renderOpts.collectedTags;if(!F)return await (0,o.I)(N,O,e,M.renderOpts.pendingWaitUntil),null;{let a=await e.blob(),b=(0,p.toNodeOutgoingHttpHeaders)(e.headers);j&&(b[r.NEXT_CACHE_TAGS_HEADER]=j),!b["content-type"]&&a.type&&(b["content-type"]=a.type);let c=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=r.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,d=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=r.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:t.CachedRouteKind.APP_ROUTE,status:e.status,body:Buffer.from(await a.arrayBuffer()),headers:b},cacheControl:{revalidate:c,expire:d}}}}catch(b){throw(null==f?void 0:f.isStale)&&await y.onRequestError(a,b,{routerKind:"App Router",routePath:e,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})},A),b}},l=await y.handleResponse({req:a,nextConfig:w,cacheKey:G,routeKind:f.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:z,isRoutePPREnabled:!1,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,responseGenerator:k,waitUntil:c.waitUntil});if(!F)return null;if((null==l||null==(i=l.value)?void 0:i.kind)!==t.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==l||null==(j=l.value)?void 0:j.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,h.getRequestMeta)(a,"minimalMode")||b.setHeader("x-nextjs-cache",B?"REVALIDATED":l.isMiss?"MISS":l.isStale?"STALE":"HIT"),x&&b.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let m=(0,p.fromNodeOutgoingHttpHeaders)(l.value.headers);return(0,h.getRequestMeta)(a,"minimalMode")&&F||m.delete(r.NEXT_CACHE_TAGS_HEADER),!l.cacheControl||b.getHeader("Cache-Control")||m.get("Cache-Control")||m.set("Cache-Control",(0,q.getCacheControlHeader)(l.cacheControl)),await (0,o.I)(N,O,new Response(l.value.body,{headers:m,status:l.value.status||200})),null};L?await g(L):await K.withPropagatedContext(a.headers,()=>K.trace(m.BaseServerSpan.handleRequest,{spanName:`${J} ${a.url}`,kind:i.SpanKind.SERVER,attributes:{"http.method":J,"http.target":a.url}},g))}catch(b){if(L||await y.onRequestError(a,b,{routerKind:"App Router",routePath:E,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})}),F)throw b;return await (0,o.I)(N,O,new Response(null,{status:500})),null}}d()}catch(a){d(a)}})},63033:a=>{a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},64939:a=>{a.exports=import("pg")},74075:a=>{a.exports=require("zlib")},79428:a=>{a.exports=require("buffer")},79551:a=>{a.exports=require("url")},79646:a=>{a.exports=require("child_process")},81630:a=>{a.exports=require("http")},83237:a=>{a.exports=import("playwright")},84297:a=>{a.exports=require("async_hooks")},86439:a=>{a.exports=require("next/dist/shared/lib/no-fallback-error.external")},91645:a=>{a.exports=require("net")},94735:a=>{a.exports=require("events")}};var b=require("../../../../webpack-runtime.js");b.C(a);var c=b.X(0,[4985,5266,1977,4097,4165,2535,3790,6865,9159,6901,467,8051,4749,303,4991,6452,4644],()=>b(b.s=62696));module.exports=c})();